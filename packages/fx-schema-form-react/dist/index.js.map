{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5c0d5a52207a166cc415","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}","webpack:///./src/models/index.tsx","webpack:///external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}","webpack:///external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}","webpack:///./src/factory.tsx","webpack:///external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/libs/merge.tsx","webpack:///./src/utils.tsx","webpack:///./src/components/form/index.tsx","webpack:///external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}","webpack:///./src/reducers/reducer.tsx","webpack:///./src/libs/tree.tsx","webpack:///./src/components/formitem/index.tsx","webpack:///./src/components/default.props.tsx","webpack:///./src/index.tsx","webpack:///./src/hocs/index.tsx","webpack:///./src/hocs/merge.tsx","webpack:///./src/hocs/utils.tsx","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}","webpack:///./src/hocs/theme.tsx","webpack:///./src/hocs/field.tsx","webpack:///./src/hocs/array.tsx","webpack:///./src/hocs/validate.tsx","webpack:///./src/hocs/make.tsx","webpack:///./src/hocs/temp.tsx","webpack:///./src/hocs/data.tsx","webpack:///external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}","webpack:///./src/hocs/resetkey.tsx","webpack:///./src/reducer.tsx","webpack:///./src/reducers/schema.form.tsx","webpack:///external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}","webpack:///./src/components/form/component.tsx","webpack:///./src/components/form/container.tsx","webpack:///./src/components/formitem/component.tsx","webpack:///external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}","webpack:///./src/components/formitem/container.tsx","webpack:///external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}","webpack:///./src/fields/index.tsx","webpack:///./src/fields/normal.tsx","webpack:///./src/fields/object.tsx","webpack:///./src/fields/array.tsx","webpack:///./src/libs/dec.tsx","webpack:///external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_34__","__WEBPACK_EXTERNAL_MODULE_39__","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_47__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","schemaFormTypes","hoc","widget","template","field","reducerFactory","__WEBPACK_IMPORTED_MODULE_0_fx_schema_form_core__","hocFactory","themeFactory","errorFactory","__WEBPACK_IMPORTED_MODULE_1__hocs__","forEach","add","__WEBPACK_IMPORTED_MODULE_2__reducer__","errs","props","dataKeys","ajv","getTitle","errorsText","dataVar","toString","customMerge","param1","param2","mergeFnc","__WEBPACK_IMPORTED_MODULE_0_immutable__","isIterable","Error","concat","isMap","merge","op","type","constructor","isSet","isOrderedSet","toOrderedSet","doSetOp","__webpack_exports__","mergeDeep","schema","_typeof","keys","length","isStack","schemaType","merged","isList","isOrderedMap","value","key","has","subSchema","undefined","set","isProd","NODE_ENV","__WEBPACK_IMPORTED_MODULE_0__component__","propTypes","assign","__WEBPACK_IMPORTED_MODULE_1__default_props__","TreeMap","parent","children","addChild","curNode","child","shift","isNumber","Number","contains","push","getKey","getIndexInParent","getCurrentKeys","_child","containPath","node","removeFromParent","index","splice","insertToFromParent","toIndex","curIndex","splitIndex","clearFunc","arguments","DefaultPropsTypeCheck","schemaId","__WEBPACK_IMPORTED_MODULE_0_prop_types___default","a","string","isRequired","uiSchema","parentKeys","array","globalOptions","arrayIndex","number","arrayLevel","formItemData","any","formItemMeta","ArrayItemComponent","defaultTheme","tempFactory","fieldFactory","widgetFactory","__WEBPACK_IMPORTED_MODULE_4__fields__","__WEBPACK_IMPORTED_MODULE_1__factory__","__WEBPACK_IMPORTED_MODULE_6__libs_dec__","bind","schemaFormDec","__WEBPACK_IMPORTED_MODULE_5__libs_tree__","SchemaForm","__WEBPACK_IMPORTED_MODULE_2__components__","__WEBPACK_IMPORTED_MODULE_3__models__","SchemaFormItem","__WEBPACK_IMPORTED_MODULE_7__libs_merge__","hocs","__WEBPACK_IMPORTED_MODULE_0__merge__","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__theme__","__WEBPACK_IMPORTED_MODULE_3__field__","__WEBPACK_IMPORTED_MODULE_4__array__","__WEBPACK_IMPORTED_MODULE_5__validate__","__WEBPACK_IMPORTED_MODULE_6__make__","__WEBPACK_IMPORTED_MODULE_7__temp__","__WEBPACK_IMPORTED_MODULE_8__data__","__WEBPACK_IMPORTED_MODULE_9__resetkey__","Component","_PureComponent","MergeComponentHoc","originKeys","__WEBPACK_IMPORTED_MODULE_1_fx_schema_form_core__","uiSchemas","_this","_mergeUiSchemaList","mergeUiSchemaList","map","v","mergeKeys","mergeSchema","_props$arrayLevel","arrayLevelCopy","reverse","pop","render","_a","extraProps","__rest","__WEBPACK_IMPORTED_MODULE_0_react___default","createElement","mergeSchemaList","__WEBPACK_IMPORTED_MODULE_0_react__","normalizeDataPath","dataPath","replace","split","isInteger","slice","unshift","__WEBPACK_IMPORTED_MODULE_2_fx_schema_form_core__","join","__WEBPACK_IMPORTED_MODULE_1_react___default","getPathKeys","getOptions","getRequiredKeys","getDefaultData","getActions","getPathProps","path","propsCur","raw","actions","__WEBPACK_IMPORTED_MODULE_7__factory__","reducerKey","element","includeKeys","excludeKeys","Array","_ref","category","_ref$uiSchema","options","_uiSchema$type","optionsArray","ks","__WEBPACK_IMPORTED_MODULE_3_immutable___default","Map","fromJS","hasIn","getIn","__WEBPACK_IMPORTED_MODULE_5__models__","extraSettings","_key","reduce","prev","next","__WEBPACK_IMPORTED_MODULE_3_immutable__","__WEBPACK_IMPORTED_MODULE_6__libs_merge__","*","toJS","_ref2","title","_ref3$title","_ref3$keys","_key2","sets","keyTitle","keysCopy","keysResolve","__WEBPACK_IMPORTED_MODULE_4_resolve_pathname___default","data","defaultData","needMerge","defaultValue","mergeData","dataOfType","mData","validate","properties","_context","t1","__WEBPACK_IMPORTED_MODULE_1_react__","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","done","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","theme","nsFactory","currentTheme","_props","FieldComponent","WidgetComponent","calcField","calcWidget","console","error","warn","commHoc","__WEBPACK_IMPORTED_MODULE_2_recompose__","addItem","__awaiter","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_callee","_props$uiSchema","items","dData","removeItem","moveItem","moveToItem","initArrayComponent","ArrayComponent","_props$uiSchema2","ArrayComponentHoc","_this2","initArrayComponents","_inherits","hocOptions","__decorate","__metadata","ArrayPureComponentHoc","_React$PureComponent","PureComponent","settings","meta","timeId","validateFunc","schemaInCache","dirty","isValid","isLoading","__WEBPACK_IMPORTED_MODULE_4__models__","__WEBPACK_IMPORTED_MODULE_5_immutable__","setTimeout","updateItemMeta","errorText","schemaPath","getSchema","$id","__WEBPACK_IMPORTED_MODULE_3_fx_schema_form_core__","$ref","compile","errors","t0","__WEBPACK_IMPORTED_MODULE_6__factory__","clearTimeout","updateItemData","_ref2$keys","noChange","_context2","t2","t4","t5","t6","removeItemData","_ref4","_ref5$keys","combineActions","updateItemDataRaw","updateItemMetaRaw","removeItemDataRaw","uiSchemaHocs","__WEBPACK_IMPORTED_MODULE_2_immutable___default","ComponentWithHocs","__WEBPACK_IMPORTED_MODULE_1_recompose__","apply","hoc1","tempField","templates","getTemplates","Temp","tempOptions","__WEBPACK_IMPORTED_MODULE_2__models__","TempWithHoc","tempHocs","tempKey","_props2","temps","typeDefaultOptions","TempComponent","getTemplate","tmp","String","tml","idx","fxSelectorCreator","__WEBPACK_IMPORTED_MODULE_2_reselect__","getItemDataHoc","rootReducerKey","dataLength","List","size","metaKeys","childNode","filter","val","treeNode","rootNode","formItemNode","rtn","DataComponentHoc","ComponentWithHoc","_ref$keys","__WEBPACK_IMPORTED_MODULE_1_react_redux__","normalOptions","__WEBPACK_IMPORTED_MODULE_1_immutable__","schemaFormReducer","resolveKeys","mKeys","setIn","SchemaFormReducer","initialState","createForm","__WEBPACK_IMPORTED_MODULE_0_redux_act__","__WEBPACK_IMPORTED_MODULE_5__utils__","removeForm","init","store","action","assigned","assignTo","removeFormHandle","removeIn","combineActionsHandle","stateNew","act2","reducer","removeItemDataMetaHandle","createFormHandle","keepData","originData","remove","__WEBPACK_IMPORTED_MODULE_3__libs_tree__","stateData","updateItemDataHandle","_ref3","updateItemMetaHandle","addItemDataHandle","collapsing","removeItemHandle","_ref5","moveItemHandle","_ref6","childNodeTo","curItemData","insert","_ref7","__WEBPACK_IMPORTED_MODULE_4__libs_merge__","newRoot","_createReducer","RootComponent","formItemList","uiScehma","__WEBPACK_IMPORTED_MODULE_2__formitem_index__","__WEBPACK_IMPORTED_MODULE_1__container__","__WEBPACK_IMPORTED_MODULE_0_recompose__","FieldComponentWithHoc","fieldHocs","__WEBPACK_IMPORTED_MODULE_1_redux__","__WEBPACK_IMPORTED_MODULE_3__utils__","__WEBPACK_IMPORTED_MODULE_2__container__","__WEBPACK_IMPORTED_MODULE_0__normal__","__WEBPACK_IMPORTED_MODULE_1__object__","__WEBPACK_IMPORTED_MODULE_2__array__","NormalField","fieldOptions","WidgetComponentWithHoc","widgetHocs","_name$default","default","ObjectField","SchemaFormWithHoc","__WEBPACK_IMPORTED_MODULE_1__components_form__","formHocs","__WEBPACK_IMPORTED_MODULE_3_recompose__","Root","_name","arrayFieldStyle","width","height","ArrayFieldComponent","style","ArrayField","initComponent","SchemaFormItemWithHoc","formItemHocs","__WEBPACK_IMPORTED_MODULE_3__components_form__","renderItem","fieldIncludeKeys","fieldExcludeKeys","SchemaFormComponentHoc","validateAll","_validateAll","resetForm","__WEBPACK_IMPORTED_MODULE_7__models__","__WEBPACK_IMPORTED_MODULE_4_immutable__","hocIncludeKeys","hocExcludeKeys","__WEBPACK_IMPORTED_MODULE_8__factory__","__WEBPACK_IMPORTED_MODULE_3_react_redux__","rootKeys","__WEBPACK_IMPORTED_MODULE_9__reducers_reducer__","isValidating","curAjv","dataRaw","$validateBeforeData","$validateAfterData","__WEBPACK_IMPORTED_MODULE_6_ajv__","errMsg","message","__WEBPACK_IMPORTED_MODULE_5_fx_schema_form_core__","_callee2","formKey","shouldResetForm","pKeepData","_props$initData","initData","_props$getActions2","t3"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SFR\", [\"react\", \"recompose\", \"immutable\", \"fx-schema-form-core\", \"react-redux\", \"resolve-pathname\", \"reselect\", \"redux-act\", \"redux\", \"prop-typese\", \"ajv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SFR\"] = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse\n\t\troot[\"SFR\"] = factory(root[\"React\"], root[\"recompose\"], root[\"Immutable\"], root[\"SFC\"], root[\"react-redux\"], root[\"resolve-pathname\"], root[\"reselect\"], root[\"redux-act\"], root[\"Redux\"], root[\"prop-types\"], root[\"Ajv\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_47__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5c0d5a52207a166cc415","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}\n// module id = 0\n// module chunks = 0","import React from \"react\";\nimport { Map } from \"immutable\";\nimport { BaseFactory, UiSchema } from \"fx-schema-form-core\";\nimport { DefaultProps } from \"../components\";\n\nexport interface SchemaFormNs<F, T, W> {\n    fieldFactory: BaseFactory<F>;\n    tempFactory: BaseFactory<T>;\n    widgetFactory: BaseFactory<W>;\n}\n\nexport type RC<P, T> = new () => React.PureComponent<P, T>;\nexport interface FxUiSchema extends UiSchema {\n    // 定义参数，与全局的配置参数格式一致；会覆盖全局的配置参数，用于单个FormSchemaItem的配置。\n    options?: Map<string, any>;\n    // \b一般用于object和array的对象；用于渲染下级显示的key。\n    children?: Array<UiSchema | string>;\n    // 主题样式配置（default: default）\n    theme?: string;\n    // 定义字段。默认使用JsonSchema的type来确定field，也可以使用这个来指定字段。\n    field?: string;\n    // 定义显示组件。每种数据类型都可以使用不同的组件来渲染。\n    widget?: string;\n    // 定义包裹的模板数组\n    temps?: string[];\n    // 是否是required，自动添加\n    isRequired?: boolean;\n    // $ref的keys，自动添加\n    refKeys?: string[];\n    // keys的原始形式，不会对-做数字化处理（只有数组类型的originKeys和keys是不同的）\n    originKeys?: string[];\n    // 是否只读\n    readonly?: boolean;\n    // 用于包裹整个ShemaFormItem的hoc数组\n    hocs?: any[];\n    // 数据更改的时候触发的方法\n    onValueChanged?: <T>(props: DefaultProps, data: T) => void;\n    // 数组的默认添加数据\n    defaultData?: any;\n    // 数据的format验证\n    format?: string;\n}\nexport type NsFactory = SchemaFormNs<RC<any, any>, RC<any, any>, RC<any, any>>;\n\nexport const schemaFormTypes = {\n    hoc: \"hoc\",\n    widget: \"widget\",\n    template: \"temp\",\n    field: \"field\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}\n// module id = 3\n// module chunks = 0","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { ErrorObject } from \"ajv\";\n\nimport { FxReducer } from \"./reducers/reducer\";\nimport { DefaultProps } from \"./components\";\nimport { NsFactory, SchemaFormNs } from \"./models\";\nimport { hocs } from \"./hocs\";\nimport { schemaFormReducer } from \"./reducer\";\nimport { Tsn } from \"./libs/tree\";\nimport { UtilsHocOutProps } from \"./hocs/utils\";\n\nexport const reducerFactory = new BaseFactory<FxReducer>();\nexport const hocFactory = new BaseFactory<(settings?: any) => new () => React.PureComponent<DefaultProps, any>>();\nexport const themeFactory = new BaseFactory<NsFactory>();\nexport const errorFactory = new BaseFactory<(element: ErrorObject[], props: DefaultProps & UtilsHocOutProps, dataKeys: Tsn[]) => string>();\n\nhocs.forEach((hoc: { name: string, hoc: (hocFactory: BaseFactory<any>) => any }) => {\n    hocFactory.add(hoc.name, hoc.hoc(hocFactory));\n});\n\nreducerFactory.add(\"schemaForm\", schemaFormReducer);\n\nerrorFactory.add(\"single\", (errs: ErrorObject[], props: DefaultProps & UtilsHocOutProps, dataKeys: Tsn[]) => {\n    const { ajv, getTitle } = props;\n\n    return ajv.errorsText(errs, {\n        dataVar: getTitle(props).toString()\n    });\n});\nerrorFactory.add(\"validate\", errorFactory.get(\"single\"));\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}\n// module id = 5\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 6\n// module chunks = 0","import { Iterable, Map, OrderedMap, List, OrderedSet, Set, Stack } from \"immutable\";\n\nfunction doSetOp(param1: any, param2: any, op: string) {\n    const type = param1.constructor.name;\n\n    if (Set.isSet(param1) || OrderedSet.isOrderedSet(param1)) {\n        return param1[op](param2);\n    }\n\n    return param1.toOrderedSet()[op](param2)[`to${type}`]();\n}\n\nfunction customMerge(param1: any, param2: any, mergeFnc: any) {\n    if (typeof mergeFnc === \"function\") {\n        return mergeFnc(param1, param2);\n    }\n\n    switch (mergeFnc) {\n        case \"replace\":\n            return param2;\n        case \"append\":\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"append\" merge function`);\n            }\n            return param1.concat(param2);\n        case \"prepend\":\n            if (!Iterable.isIterable(param2)) {\n                throw new Error(`Non-iterable passed to \"prepend\" merge function`);\n            }\n            return param2.concat(param1);\n        case \"union\":\n            if (Map.isMap(param1)) {\n                return param1.merge(param2);\n            }\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"union\" merge function`);\n            }\n            return doSetOp(param1, param2, \"union\");\n        default:\n            throw new Error(`Unknown merge function \"${mergeFnc}\"`);\n    }\n}\n\nfunction mergeDeep(param1: any, param2: any, schema?: any) {\n    // there\"s no schema defined => native merge or override\n    if (!schema || (typeof schema === \"object\" && Object.keys(schema).length === 0)) {\n        return Iterable.isIterable(param1) && !Stack.isStack(param1) ? param1.mergeDeep(param2) : param2;\n    }\n\n    const schemaType = typeof schema;\n\n    // no keys in schema, merging is handled by custom merge function\n    if (schemaType === \"string\" || schemaType === \"function\") {\n        return customMerge(param1, param2, schema);\n    }\n\n    // at this point anything other than object as a schema should be handled above\n    if (schemaType !== \"object\") {\n        throw new Error(\"Invalid schema\");\n    }\n\n    if (!Iterable.isIterable(param1) || !Iterable.isIterable(param2)) {\n        throw new Error(\"Only immutable iterables can be merged using merge schema\");\n    }\n\n    if (Set.isSet(param1) || Set.isSet(param2) || Stack.isStack(param1) || Stack.isStack(param2)) {\n        throw new Error(\"Sets and Stacks can't be merged with schema\");\n    }\n\n    // const immutableType = param1.constructor.name;\n    let merged: any;\n\n    if (List.isList(param1)) {\n        merged = List([]);\n    } else if (Map.isMap(param1)) {\n        merged = Map({});\n    } else if (OrderedMap.isOrderedMap(param1)) {\n        merged = OrderedMap({});\n    } else {\n        throw new Error(\"Unsupported type\");\n    }\n\n    // switch (immutableType) {\n    //     case \"List\": merged = List([]); break;\n    //     case \"Map\": merged = Map({}); break;\n    //     case \"OrderedMap\": merged = OrderedMap({}); break;\n    //     default:\n    //         throw new Error(\"Unsupported type\");\n    // }\n\n    param1.forEach((value: any, key: string) => {\n        if (param2.has(key)) {\n            const subSchema = schema ? (schema[key] || schema[\"*\"]) : undefined;\n            merged = merged.set(key, mergeDeep(param1.get(key), param2.get(key), subSchema));\n        } else {\n            merged = merged.set(key, param1.get(key));\n        }\n    });\n\n    param2.forEach((value: any, key: string) => {\n        if (!param1.has(key)) {\n            merged = merged.set(key, param2.get(key));\n        }\n    });\n\n    return merged;\n}\n\nexport default mergeDeep;\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/merge.tsx","export const isProd = () => {\n    const { NODE_ENV } = process.env;\n\n    return typeof NODE_ENV !== \"undefined\" &&\n        NODE_ENV === `\"production\"`;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.tsx","import { SchemaForm } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaForm.propTypes = Object.assign({}, DefaultPropsTypeCheck) as any;\n\nexport { SchemaForm };\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}\n// module id = 10\n// module chunks = 0","import { Reducer } from \"redux-act\";\nimport { Store } from \"redux\";\n\nexport interface FxReducer {\n    actions: any;\n    reducer: Reducer<any>;\n    init(store: Store<any>): void;\n}\n\nexport const d = \"data\";\nexport const m = \"meta\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/reducer.tsx","\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap {\n    public children: TreeMap[] = [];\n\n    /**\n     * 构造函数\n     * @param key    当前节点的key，用于计算位置\n     * @param value  当前节点的值\n     * @param parent 当前节点的父亲节点\n     */\n    constructor(private key: string, public value: any, private parent?: TreeMap) { }\n\n    /**\n     * 添加一个孩子元素\n     * 这里需要构建一颗完整的树，所以要遍历keys来动态创建节点\n     * time complexity = O(1) / Constant\n     * @param keys  节点的路径 example [\"root\",\"b\"]  root -> b\n     * @param value 孩子的数据\n     * @returns TreeMap\n     */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap | null {\n        let curNode: TreeMap = this;\n        let child: TreeMap | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        keys = [...keys];\n\n        // 创建所有路径的节点\n        while (keys.length) {\n            let key: Tsn = keys.shift() as (Tsn);\n            let isNumber = key.constructor === Number;\n\n            child = curNode.contains(key);\n\n            // 这里需要做一下特殊处理\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber) {\n                    child = new TreeMap(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        if (child) {\n            child.value = value;\n        }\n\n        return child;\n    }\n\n    /**\n     * 获取当前的key\n     * 如果key是`-`,代表是数组，则转换成数组下标\n     * time complexity = O(1) / Constant\n     * @returns string\n     */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n     * 获取当前节点的keys路径\n     * time complexity = O(1) / Constant\n     * @returns string[]\n     */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n     * 获取当前节点在父亲children中的下标索引\n     * time complexity = O(1) / Constant\n     * @returns number\n     */\n    public getIndexInParent(): number {\n\n        if (this.parent) {\n            let children = this.parent.children;\n\n            for (let i = 0, n = children.length; i < n; i++) {\n                let child = children[i];\n\n                if (child && child === this) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * 从当前节点查找是否存在节点\n     * time complexity = O(n) / Linear\n     * @param key 节点的数据\n     * @returns TreeMap\n     */\n    public contains(key: Tsn): TreeMap | null {\n        let isNumber = key.constructor === Number;\n\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber) {\n            if (this.children.length > key) {\n                let child = this.children[key as number];\n\n                if (!child) {\n                    this.children[key as number] = new TreeMap(\"-\", null, this);\n\n                    child = this.children[key as number];\n                }\n\n                return child;\n            }\n\n            return null;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            let child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 根据给定的路径数组，返回对应的节点\n     * time complexity = O(n) / Linear\n     * @param keys 路径\n     * @returns TreeMap | null\n     */\n    public containPath(keys: Array<Tsn>): TreeMap | null {\n        let node: TreeMap | null = this;\n\n        keys.forEach((key: Tsn) => {\n            if (!node) {\n                return null;\n            }\n            node = node.contains(key);\n\n            if (!node) {\n                return null;\n            }\n\n            return null;\n        });\n\n        return node;\n    }\n\n    /**\n     * 从父亲节点中删除当前节点\n     * time complexity = O(n) / Linear\n     */\n    public removeFromParent(): void {\n        let index = this.getIndexInParent();\n\n        if (this.parent) {\n            this.parent.children.splice(index, 1);\n        }\n    }\n\n    /**\n     * 移动到某个位置\n     * time complexity = O(1) / Linear\n     * @param toIndex 需要移动到的位置\n     */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n        let offset = (toIndex > curIndex && false) ? 1 : 0;\n        let splitIndex = toIndex;\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.addChild([toIndex]);\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n        // 将当前节点插入到制定的位置\n        this.parent.children = this.parent.children.concat([]).splice(0, splitIndex - offset).concat([this])\n            .concat(this.parent.children.splice(splitIndex - offset));\n    }\n\n    /**\n     * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n     * @param node 指定的节点\n     */\n    public forEach(clearFunc: (node: TreeMap) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        if (!this.children) {\n            return;\n        }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            if (this.children[i]) {\n                this.children[i].value = clearFunc(this.children[i]);\n                this.children[i].forEach(clearFunc);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/tree.tsx","import { SchemaFormItem } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaFormItem.propTypes = Object.assign({}, DefaultPropsTypeCheck) as any;\n\nexport { SchemaFormItem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/index.tsx","// import { UiSchema } from \"fx-schema-form-core/dist/typings/models/uischema\";\nimport { Ajv } from \"ajv\";\nimport Immutable from \"immutable\";\nimport propTypes, { ValidationMap } from \"prop-types\";\n\nimport { FxUiSchema } from \"../models\";\n/**\n * 默认的组件参数\n */\nexport interface DefaultProps {\n    /**\n     * schema对应的$id\n     */\n    schemaId: string;\n    /**\n     * uiSchema\n     */\n    uiSchema?: FxUiSchema;\n    /**\n     * 父亲的路径\n     */\n    parentKeys: string[];\n    /**\n     * 全局默认配置\n     */\n    globalOptions: Immutable.Map<string, any>;\n    /**\n     * ajv的实例\n     */\n    ajv: Ajv;\n    /**\n     * 如果是数组，则表示当前数组的下标\n     */\n    arrayIndex?: number;\n    /**\n     * 当前formItem的层级\n     */\n    arrayLevel?: number[];\n    /**\n     * 数据\n     */\n    formItemData?: any;\n    /**\n     * meta数据\n     */\n    formItemMeta?: any;\n    /**\n     * 数组元素子项的操作\n     */\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n    /**\n     * 当前的reducerkey\n     */\n    reducerKey?: string;\n}\n\nexport const DefaultPropsTypeCheck: ValidationMap<DefaultProps & { customProp: Function }> = {\n    schemaId: propTypes.string.isRequired,\n    uiSchema: propTypes.object,\n    parentKeys: propTypes.array.isRequired,\n    globalOptions: propTypes.object.isRequired,\n    ajv: propTypes.object.isRequired,\n    arrayIndex: propTypes.number,\n    arrayLevel: propTypes.array,\n    formItemData: propTypes.any,\n    formItemMeta: propTypes.any,\n    ArrayItemComponent: propTypes.any\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/default.props.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { reducerFactory, hocFactory, themeFactory } from \"./factory\";\nimport { SchemaForm, DefaultProps, SchemaFormItem } from \"./components\";\nimport { RC,  schemaFormTypes, SchemaFormNs } from \"./models\";\n\nimport fields from \"./fields\";\nimport { TreeMap } from \"./libs/tree\";\nimport {  default as schemaFormDec, name as schemaFormDecName, SchemaFormHocSettings, SchemaFormProps } from \"./libs/dec\";\nimport merge from \"./libs/merge\";\nimport { FxReducer } from \"./reducers/reducer\";\n\n/**\n * 默认样式配置\n * 每个样式包含temp，field和widget三个factory\n */\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    fieldFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    widgetFactory: new BaseFactory<RC<DefaultProps, any>>()\n};\n\n// const a :SchemaFormProps;\n\n/**\n * 添加默认的fields\n */\nfields.forEach((field: any) => {\n    for (const key in field) {\n        if (field.hasOwnProperty(key)) {\n            defaultTheme.fieldFactory.add(key, field[key]);\n        }\n    }\n});\n\nthemeFactory.add(\"default\", defaultTheme as any);\n\nhocFactory.add(schemaFormDecName, schemaFormDec.bind(schemaFormDec, hocFactory));\n\nexport default {\n    themeFactory,\n    defaultTheme,\n    schemaFormDec,\n    TreeMap,\n    reducerFactory,\n    SchemaForm,\n    hocFactory,\n    schemaFormTypes,\n    SchemaFormItem,\n    merge\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { default as merge } from \"./merge\";\nimport { default as utils } from \"./utils\";\nimport { default as theme } from \"./theme\";\nimport { default as field } from \"./field\";\nimport { default as array } from \"./array\";\nimport { default as validate } from \"./validate\";\nimport { default as make } from \"./make\";\nimport { default as temp } from \"./temp\";\nimport { default as data } from \"./data\";\nimport { default as resetkey } from \"./resetkey\";\n\nexport const hocs: Array<{ name: string, hoc: (hocFactory: BaseFactory<any>) => any }> =\n    [merge, utils, theme, field, array, validate, make, temp, data, resetkey];\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/index.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, UiSchema } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    mergeSchemaList?: FxUiSchema[];\n}\n\nexport interface MergeHocProps extends DefaultProps {\n    uiSchemas: Array<string | UiSchema>;\n}\n\nexport const name = \"merge\";\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n * mergeSchemaList    合并之后的数据\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: RC<any, any>): RC<MergeHocProps, any> => {\n            class MergeComponentHoc extends PureComponent<MergeHocProps, any> {\n                private _mergeUiSchemaList: FxUiSchema[];\n\n                /**\n                 * 合并schema和uiSchema生成 mergeUiSchemaList\n                 * @param props props\n                 */\n                constructor(props: MergeHocProps) {\n                    super(props);\n\n                    const uiSchema = props.uiSchema ? Object.assign({}, props.uiSchema) : undefined;\n\n\n                    if (uiSchema) {\n                        uiSchema.keys = uiSchema.originKeys;\n                    }\n\n                    // 这里做数据合并处理\n                    // 将合并之后的数据传递到下一层的Component\n                    const merge = new MergeLib(props.ajv, props.schemaId, uiSchema as any, props.uiSchemas as any);\n\n                    this._mergeUiSchemaList = merge.mergeUiSchemaList.map((v: any) => {\n                        return this.mergeKeys(v);\n                    });\n                }\n\n                /**\n                 * 解析keys\n                 * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n                 * @param mergeSchema 合并过后的FxUiSchema\n                 */\n                private mergeKeys(mergeSchema: any) {\n                    const { arrayLevel = [] } = this.props;\n                    const arrayLevelCopy = arrayLevel.concat([]);\n\n                    mergeSchema = Object.assign({}, mergeSchema);\n                    mergeSchema.originKeys = [].concat(mergeSchema.keys);\n                    mergeSchema.keys = mergeSchema.keys.reverse().map((key: string) => {\n                        if (key === \"-\") {\n                            return arrayLevelCopy.pop();\n                        }\n\n                        return key;\n                    });\n                    mergeSchema.keys.reverse();\n\n                    return mergeSchema;\n                }\n\n                public render(): JSX.Element {\n                    const { uiSchemas, uiSchema, ...extraProps } = this.props;\n\n                    return (\n                        <Component\n                            mergeSchemaList={this._mergeUiSchemaList}\n                            {...extraProps}\n                        />\n                    );\n                }\n            }\n\n            return MergeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/merge.tsx","\n\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, schemaKeysFactory, schemaFieldFactory, getSchemaId } from \"fx-schema-form-core\";\nimport Immutable, { fromJS } from \"immutable\";\nimport resolvePathname from \"resolve-pathname\";\nimport { JSONSchema6 } from \"json-schema\";\nimport { Ajv } from \"ajv\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport merge from \"../libs/merge\";\nimport { reducerFactory } from \"../factory\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\n\nexport const name = \"utils\";\n\nexport interface UtilsHocOutProps {\n    getOptions: (props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n        => { [key: string]: any };\n    getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): () => string;\n    getPathKeys: (keys: string[], path: string, schemaId?: string) => Array<string | number>;\n    normalizeDataPath: (schemaId: string, dataPath: string) => Array<string | number>;\n    getRequiredKeys: (props: DefaultProps, include: string[], exclude: string[]) => { [key: string]: any };\n    getDefaultData: (ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, merge?: boolean) => Promise<any>;\n    getActions: (props: DefaultProps, raw?: boolean) => SchemaFormActions;\n    getPathProps: (props: DefaultProps, path: string) => DefaultProps;\n}\n\n\n/**\n * dataPath中的key格式化；\n * dataPath是一个字符串，需要把里面的数字转化一下\n * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符\n * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n * @param schemaId schemaId\n * @param dataPath 当前的数据路径字符串\n */\nconst normalizeDataPath = (schemaId: string, dataPath: string): Array<string | number> => {\n    let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n    dataKeys = dataKeys.map((key: string | number, index: number) => {\n        if (Number.isInteger(+key)) {\n            let keys: Array<string | number> = dataKeys.slice(0, index);\n\n            keys.unshift(schemaId);\n\n            if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                if (schema.type === \"array\") {\n                    return +key;\n                }\n            }\n        }\n\n        return key;\n    });\n\n    return dataKeys;\n};\n\n/**\n * 包装utils的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            class ComponentHoc extends PureComponent<UtilsHocOutProps, any> {\n                public render(): JSX.Element {\n                    return <Component\n                        getTitle={this.getTitle}\n                        getPathKeys={this.getPathKeys}\n                        getOptions={this.getOptions}\n                        normalizeDataPath={normalizeDataPath}\n                        getRequiredKeys={this.getRequiredKeys}\n                        getDefaultData={this.getDefaultData}\n                        getActions={this.getActions}\n                        getPathProps={this.getPathProps}\n                        {...this.props} />;\n                }\n\n                /**\n                 * 将当前的props更改成任意路径的props\n                 * @param props 当前组件的props\n                 * @param path  需要转换的路径\n                 */\n                private getPathProps(props: DefaultProps & UtilsHocOutProps, path: string): DefaultProps {\n                    let newProps = Object.assign({}, props, {\n                        uiSchema: Object.assign({}, props.uiSchema, {\n                            keys: props.getPathKeys((props.uiSchema as any).keys as any, path)\n                        })\n                    });\n\n                    return newProps;\n                }\n\n                /**\n                 * 获取当前的reducer中的actions\n                 * @param propsCur 当前的属性\n                 * @param raw      是否为raw\n                 */\n                private getActions(propsCur: DefaultProps, raw = false) {\n                    let actions = reducerFactory.get(propsCur.reducerKey || \"schemaForm\").actions;\n\n                    if (raw) {\n                        for (const key in actions) {\n                            if (actions.hasOwnProperty(key)) {\n                                const element = actions[key];\n\n                                actions[key] = element.raw;\n                            }\n                        }\n                    }\n\n                    return actions;\n                }\n\n                /**\n                 * 过滤props中的属性，只传递所需的属性\n                 * 从设置中，获取一部分的设置\n                 * @param props        当前component的props\n                 * @param includeKeys  需要保留的keys\n                 * @param excludeKeys  需要去掉的keys\n                 */\n                private getRequiredKeys(props: { [key: string]: any }, includeKeys: string[] = [], excludeKeys: string[] = [])\n                    : { [key: string]: any } {\n                    let extraProps: { [key: string]: any } = {};\n\n                    if (includeKeys && includeKeys.constructor === Array && includeKeys.length) {\n                        includeKeys.forEach((key: string) => {\n                            if (props.hasOwnProperty(key)) {\n                                extraProps[key] = props[key];\n                            }\n                        });\n                    } else {\n                        extraProps = Object.assign({}, props);\n                    }\n\n                    if (excludeKeys && excludeKeys.constructor === Array && excludeKeys.length) {\n                        excludeKeys.forEach((key: string) => {\n                            if (extraProps.hasOwnProperty(key)) {\n                                delete extraProps[key];\n                            }\n                        });\n                    }\n\n                    return extraProps;\n                }\n\n                /**\n                 * 获取参数\n                 * @param props         当前component的props\n                 * @param category      需要获取的种类，有template，field，hoc等\n                 * @param field         field的名称\n                 * @param extraSettings 其余的设置项\n                 */\n                private getOptions({ uiSchema = {}, globalOptions }: DefaultProps,\n                    category: string,\n                    field: string,\n                    ...extraSettings: Immutable.Map<string, any>[]): { [key: string]: any } {\n\n                    let { options, type = \"\" } = uiSchema as FxUiSchema,\n                        optionsArray: Immutable.Map<string, any>[] = [],\n                        getOptions = (o: any, ks: string[]) => {\n                            if (o) {\n                                if (!Immutable.Map.isMap(o)) {\n                                    o = Immutable.fromJS(o);\n                                }\n                                if (o.hasIn(ks)) {\n                                    optionsArray.push(o.getIn(ks));\n                                }\n                            }\n                        };\n\n                    // 从globalOptions中抽取default的配置\n                    // 从globalOptions中抽取field的配置\n                    // 从options中抽取field的配置\n                    getOptions(globalOptions, [category, \"default\"]);\n                    getOptions(globalOptions, [category, field]);\n                    getOptions(globalOptions, [schemaFormTypes.field, type.toString(), \"options\", category, field]);\n                    getOptions(options, [category, field]);\n\n                    optionsArray = optionsArray.concat(extraSettings);\n\n                    let opts = optionsArray.reverse().reduce((prev: any, next: Immutable.Map<string, any>) => {\n                        if (next) {\n                            if (!Immutable.Map.isMap(next)) {\n                                next = fromJS(next);\n                            }\n\n                            return merge(next, prev, { \"*\": \"replace\" });\n                        }\n\n                        return prev;\n                    }, fromJS({}));\n\n                    return opts.toJS();\n                }\n                /**\n                 * 获取标题数据\n                 * title || key || index\n                 * @param props         当前的props\n                 * @param extraSettings 额外的配置参数\n                 */\n                private getTitle({ uiSchema, arrayIndex }: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): string {\n                    let { title = undefined, keys = [] } = uiSchema as FxUiSchema || {};\n\n                    if (!title && extraSettings && extraSettings.length) {\n                        extraSettings.forEach((sets: Immutable.Map<string, any>) => {\n                            if (sets && !title && sets.get(\"title\")) {\n                                title = sets.get(\"title\");\n                            }\n                        });\n                    }\n\n                    if (title !== undefined) {\n                        return title;\n                    }\n\n                    if (keys && keys.length) {\n                        let keysCopy = [...keys], keyTitle = keysCopy.pop();\n\n                        return keyTitle !== undefined ? keyTitle.toString() : \"\";\n                    }\n\n                    if (arrayIndex) {\n                        return arrayIndex.toString();\n                    }\n\n                    return \"\";\n                }\n\n                /**\n                 * 根据相对路径，得到keys\n                 * @param keys 当前的keys\n                 * @param path 路径\n                 */\n                private getPathKeys(keys: Array<string>, path: string, schemaId?: string): Array<string> {\n                    let keysCopy = [\"\"].concat(keys.concat([\"\"]));\n                    let keysResolve: any[] = resolvePathname(path, keysCopy.join(\"/\")).split(\"/\");\n\n                    keysResolve.shift();\n\n                    if (keysResolve.length && !keysResolve[keysResolve.length - 1]) {\n                        keysResolve.pop();\n                    }\n\n                    // 这里处理一下这个字符串数字的问题把数组中的 \"1\" 转换成 1\n                    if (schemaId) {\n                        keysResolve = normalizeDataPath(getSchemaId(schemaId), keysResolve.join(\"/\"));\n                    }\n\n                    return keysResolve;\n                }\n\n                /**\n                 * 获取当前schema的默认的数据\n                 *  通过ajv的validate方法获取默认的数据\n                 *  与data和defaultData做合并处理\n                 * @param ajv          ajv实例\n                 * @param schema       json-schema\n                 * @param data         额外的数据\n                 * @param defaultData  额外的数据\n                 * @param needMerge    是否需要合并数据\n                 */\n                private async getDefaultData(ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, needMerge = false): Promise<any> {\n                    let defaultValue: any = {},\n                        type = schema.type,\n                        mergeData = (dataOfType: any) => {\n                            if (!needMerge) {\n                                return defaultValue.defaultData;\n                            }\n\n                            let mData: any = merge(fromJS(defaultValue.defaultData), fromJS(dataOfType));\n\n                            if (defaultData) {\n                                return merge(mData, fromJS(defaultData));\n                            }\n\n                            return mData.toJS();\n                        };\n\n                    try {\n                        // 调用ajv的validate方法，这里会处理defaultValue的值\n                        await ajv.validate({\n                            type: \"object\",\n                            properties: {\n                                defaultData: schema\n                            }\n                        }, defaultValue);\n                    } catch (e) {\n                        return data;\n                    } finally {\n                        switch (type) {\n                            case \"object\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || {};\n                                }\n                                defaultValue.defaultData = mergeData(data || {});\n                                break;\n                            case \"array\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || [];\n                                }\n                                defaultValue.defaultData = mergeData(data || []);\n                                break;\n                            default:\n                                defaultValue.defaultData = data || defaultValue.defaultData;\n                        }\n                    }\n\n                    return defaultValue.defaultData;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/utils.tsx","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 21\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}\n// module id = 22\n// module chunks = 0","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, NsFactory } from \"../models\";\nimport { themeFactory } from \"../factory\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\nexport const name = \"theme\";\n\n/**\n * 包装theme的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            const defualtKey = \"default\";\n            class ThemeComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    const { theme } = this.props.uiSchema as FxUiSchema;\n                    let nsFactory;\n\n                    if (themeFactory.has(theme || defualtKey)) {\n                        nsFactory = themeFactory.get(theme || defualtKey);\n                    } else {\n                        throw new Error(`没有找到${theme || defualtKey}的样式！`);\n                    }\n\n                    return <Component currentTheme={nsFactory} {...this.props} />;\n                }\n            }\n\n            return ThemeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/theme.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC } from \"../models\";\nimport { isProd } from \"../utils\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\nexport const name = \"field\";\n/**\n * 包装Field的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> => {\n            const defaultKey = \"default\";\n            class FieldComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> {\n                public render(): JSX.Element | null {\n                    const { currentTheme, getOptions, uiSchema } = this.props,\n                        { field, widget, type } = uiSchema as any;\n                    let FieldComponent, WidgetComponent,\n                        calcField = field || type as string,\n                        calcWidget = widget || type as string;\n\n                    // 查找field\n                    if (currentTheme.fieldFactory.has(calcField)) {\n                        FieldComponent = currentTheme.fieldFactory.get(calcField);\n                    } else {\n                        if (currentTheme.fieldFactory.has(defaultKey)) {\n                            FieldComponent = currentTheme.fieldFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.error(`找不到field：${calcField}`); }\n                            return null;\n                        }\n                    }\n\n                    // 查找widget\n                    if (currentTheme.widgetFactory.has(calcWidget)) {\n                        WidgetComponent = currentTheme.widgetFactory.get(calcWidget);\n                    } else {\n                        if (currentTheme.widgetFactory.has(defaultKey)) {\n                            WidgetComponent = currentTheme.widgetFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.warn(`找不到widget：${calcWidget}`, uiSchema); }\n                        }\n                    }\n\n                    return <Component {...this.props}\n                        FieldComponent={(FieldComponent)}\n                        WidgetComponent={WidgetComponent} />;\n                }\n            }\n\n            return FieldComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/field.tsx","\nimport React, { PureComponent } from \"react\";\nimport { branch, compose, withHandlers, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\nimport { ASN } from \"../reducers/schema.form\";\n\nexport interface ArrayHocOutProps {\n    addItem: (props: DefaultProps, data?: any) => Promise<void>;\n    removeItem: (parentKeys: any[], keys: any[], index: number) => void;\n    moveItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    initArrayComponent: (props: DefaultProps, index?: number) => JSX.Element;\n    ArrayComponent?: new () => React.PureComponent<DefaultProps>;\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport interface ArrayProps extends DefaultProps, UtilsHocOutProps { }\n\nexport const name = \"array\";\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        const commHoc = compose(\n            withHandlers<ArrayProps, any>({\n                /**\n                 * 更新一个数据\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                addItem: (propsCur: ArrayProps) => {\n                    return async (props: ArrayProps, data?: any) => {\n                        if (!props.uiSchema || !props.uiSchema.items) {\n                            return;\n                        }\n                        const { items, keys, defaultData } = props.uiSchema;\n                        const dData = await props.getDefaultData(props.ajv, items as any, data, defaultData, true);\n\n                        propsCur.getActions(propsCur).addItem({\n                            parentKeys: props.parentKeys,\n                            keys: keys as string[],\n                            data: dData\n                        });\n                    };\n                },\n                /**\n                 * 删除一个数组元素\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                removeItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], index: number) => {\n                        propsCur.getActions(propsCur).removeItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            index: index\n                        });\n                    };\n                },\n                /**\n                 * 移动到某个元素后面\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                moveItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => {\n                        propsCur.getActions(propsCur).moveToItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            curIndex: curIndex,\n                            toIndex: toIndex\n                        });\n                    };\n                },\n                /**\n                 * 初始化array的操作组件\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                initArrayComponent: (propsCur: DefaultProps) => {\n                    return (props: DefaultProps & ArrayHocOutProps, index?: number) => {\n                        const { ArrayComponent, ArrayItemComponent, ...extraProps } = props, uiSchema = props.uiSchema as FxUiSchema;\n\n                        if (uiSchema.type === \"array\") {\n                            return ArrayComponent ? <ArrayComponent {...extraProps} /> : null;\n                        }\n\n                        return ArrayItemComponent ? <ArrayItemComponent {...extraProps} /> : null;\n                    };\n                }\n            })) as any;\n\n        /**\n         * 包装array的组件HOC\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        const arrayHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayComponentHoc extends PureComponent<ArrayProps, any> {\n                private ArrayComponent: new () => React.PureComponent;\n                private ArrayItemComponent: new () => React.PureComponent;\n\n                constructor(props: ArrayProps, context: any) {\n                    super(props, context);\n                    this.initArrayComponents();\n                }\n\n                private initArrayComponents() {\n                    const { getOptions } = this.props;\n                    const hocOptions: any = getOptions(this.props, \"hoc\", name);\n\n                    // 设置当前的arrayComponent和ArrayItemComponent\n                    if (hocOptions.ArrayComponent) {\n                        this.ArrayComponent = hocOptions.ArrayComponent;\n                    }\n\n                    if (hocOptions.ArrayItemComponent) {\n                        this.ArrayItemComponent = hocOptions.ArrayItemComponent;\n                    }\n\n                }\n\n                public render(): JSX.Element {\n                    let props: any = {};\n\n                    if (this.ArrayComponent) {\n                        props.ArrayComponent = this.ArrayComponent;\n                    }\n\n                    if (this.ArrayItemComponent) {\n                        props.ArrayItemComponent = this.ArrayItemComponent;\n                    }\n\n                    return <Component {...this.props} {...props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n\n        /**\n         * 如果不是数组则返回pureComponent\n         * @param Component  需要包装的组件\n         */\n        const pureHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayPureComponentHoc extends React.PureComponent<ArrayProps, any> {\n                public render() {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayPureComponentHoc as any;\n        };\n\n        /**\n         * A/B test\n         * 如果是数组则使用A，如果不是则使用B\n         */\n        return branch(\n            (props: ArrayProps) => {\n                const { uiSchema = { type: \"\" } } = props;\n\n                return uiSchema.type === \"array\";\n            },\n            arrayHoc,\n            pureHoc\n        );\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/array.tsx","\nimport { ErrorObject } from \"ajv\";\nimport React, { PureComponent } from \"react\";\nimport { withHandlers, compose } from \"recompose\";\nimport { BaseFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { Action } from \"redux-act\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC, schemaFormTypes } from \"../models\";\nimport { fromJS } from \"immutable\";\nimport { errorFactory } from \"../factory\";\n\nexport interface ValidateHocOutProps {\n    updateItemData: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMeta: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemData: (props: DefaultProps, meta?: any) => void;\n    updateItemDataRaw: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMetaRaw: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemDataRaw: (props: DefaultProps, meta?: any) => void;\n    combineActions: (...actions: Action<any>[]) => void;\n    validate: (props: DefaultProps, data: any, meta?: any) => Promise<any>;\n}\n\nexport interface ValidateHocSetting {\n    root?: boolean;\n    errorsText?: (errors: ErrorObject[], props: DefaultProps) => string;\n}\n\nexport const name = \"validate\";\n\n/**\n * 包装validate的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: ValidateHocSetting = {}) => {\n        return (Component: any): RC<DefaultProps, any> => {\n            @(compose(\n                hocFactory.get(\"data\")({\n                    root: settings.root\n                }),\n                withHandlers<any, any>({\n                    /**\n                     * 验证单个数据\n                     * 使用当前组件中的uiSchema，以及传递过来的数据做验证\n                     * 这里可能有远程验证\n                     */\n                    validate: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return async (props: DefaultProps & UtilsHocOutProps, data: any, meta: any = {}) => {\n                            const result: any = { dirty: true, isValid: false, isLoading: false };\n                            const { uiSchema, parentKeys, ajv, getTitle, getOptions } = props;\n                            const schema = Object.assign({}, uiSchema);\n                            const options = getOptions(props, schemaFormTypes.hoc, name, fromJS(settings));\n                            const timeId = setTimeout(() => {\n                                propsCur.getActions(propsCur).updateItemMeta({\n                                    parentKeys: parentKeys,\n                                    keys: (schema as any).keys,\n                                    meta: { isLoading: true, isValid: false, errorText: false }\n                                });\n                            }, 200);\n\n                            // 这里做一层try catch处理\n                            try {\n                                let validateFunc;\n\n                                // 使用schema.schemaPath来确定schema\n                                if (schema.schemaPath && ajv.getSchema(schema.schemaPath)) {\n                                    validateFunc = ajv.getSchema(schema.schemaPath);\n                                } else if (schema.$id) {\n                                    validateFunc = ajv.getSchema(schema.$id);\n                                } else {\n                                    let schemaInCache = Object.assign({}, schemaFieldFactory.get(schema.schemaPath || \"\"));\n\n                                    delete schemaInCache.$id;\n                                    delete schemaInCache.$ref;\n\n                                    validateFunc = ajv.compile(schemaInCache);\n                                }\n\n                                if (propsCur.formItemData) {\n                                    result.isValid = await validateFunc(data, undefined, undefined,\n                                        undefined, propsCur.formItemData.toJS());\n                                } else {\n                                    result.isValid = await validateFunc(data);\n                                }\n\n                                // 如果验证出错，则抛出错误\n                                if (!result.isValid) {\n                                    let error: any = new Error();\n\n                                    error.errors = validateFunc.errors;\n\n                                    throw error;\n                                }\n                            } catch (err) {\n                                // 处理错误消息\n                                if (options.errorsText) {\n                                    result.errorText = options.errorsText(err.errors, props);\n                                } else {\n                                    result.errorText = errorFactory.get(\"validate\")(err.errors, props, []);\n                                    //  err.errors ?\n                                    //     ajv.errorsText(err.errors, {\n                                    //         dataVar: getTitle(props).toString()\n                                    //     }) : err.message;\n                                }\n                            }\n                            finally {\n                                clearTimeout(timeId);\n                            }\n\n                            return Object.assign({}, meta, result);\n                        };\n                    }\n\n                }),\n                hocFactory.get(\"resetKey\")({\n                    excludeKeys: [\"formItemData\"]\n                }),\n                withHandlers<any, any>({\n                    /**\n                     * 更新一个数据\n                     */\n                    updateItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, data: any, meta?: any) => {\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).updateItemData({\n                                parentKeys,\n                                keys,\n                                data,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 更新一个元数据\n                     */\n                    updateItemMeta: (propsCur: DefaultProps & UtilsHocOutProps & ValidateHocOutProps) => {\n                        return async (raw: boolean, props: DefaultProps, data: any, meta: any = null, noChange = false) => {\n                            const { parentKeys, uiSchema } = props;\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).updateItemMeta({\n                                parentKeys,\n                                keys,\n                                meta: meta || await propsCur.validate(props, data),\n                                noChange\n                            });\n                        };\n                    },\n                    /**\n                     * 删除一个元素的meta和data\n                     */\n                    removeItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, meta = true) => {\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).removeItemData({\n                                parentKeys,\n                                keys,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 合并多个action\n                     */\n                    combineActions: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (...actions: Action<any>[]) => {\n                            return propsCur.getActions(propsCur).combineActions(actions);\n                        };\n                    },\n                }),\n                withHandlers<any, any>({\n                    updateItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, false);\n                    },\n                    updateItemMeta: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, false);\n                    },\n                    removeItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, false);\n                    },\n                    updateItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, true);\n                    },\n                    updateItemMetaRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, true);\n                    },\n                    removeItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, true);\n                    }\n                })) as any)\n            class ArrayComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/validate.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport Immutable from \"immutable\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\n\nexport interface MakeHocOutProps extends UtilsHocOutProps {\n\n}\n\nexport const name = \"make\";\n\n/**\n * make的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n *  1. HOC默认顺序：ThemeHoc -> FieldHoc -> ValidateHoc -> ArrayHoc -> TempHoc\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps & MakeHocOutProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class MakeComponentHoc extends PureComponent<DefaultProps & MakeHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions } = this.props;\n                    const { type, field, hocs: uiSchemaHocs } = uiSchema as FxUiSchema;\n                    const fieldOptions = getOptions(this.props, schemaFormTypes.field, field || type as string,\n                        Immutable.fromJS(uiSchemaHocs ? { hocs: uiSchemaHocs } : {}),\n                        Immutable.fromJS(settings || {}));\n                    const hocs: Array<string | ComponentEnhancer<any, any>> = fieldOptions.hocs\n                        || [\"utils\", \"theme\", \"field\", \"validate\", \"array\", \"temp\"];\n                    const ComponentWithHocs: any = compose<DefaultProps & MakeHocOutProps, any>\n                        (...([...hocs].map(hoc1 => {\n                            if (typeof hoc1 !== \"string\") {\n                                return hoc1;\n                            }\n                            return hocFactory.get(hoc1)();\n                        })))(Component);\n\n                    return <ComponentWithHocs {...this.props} />;\n                }\n            }\n\n            return MakeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/make.tsx","import React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { ArrayHocOutProps } from \"./array\";\n\nexport const name = \"temp\";\n\n/**\n * 包装Template的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {\n        tempField: \"temps\",\n        templates: []\n    }) => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps, any> => {\n            /**\n            * 获取模板的components\n            * @param uiSchema 合并后的数据\n            */\n            class TempComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps & ArrayHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions, reducerKey } = this.props;\n                    // const { options: uiSchemaOptions, keys } = uiSchema as FxUiSchema;\n                    const TempComponents = this.getTemplates();\n\n                    return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                        const tempOptions = getOptions(this.props, schemaFormTypes.template, key),\n                            TempWithHoc: any = compose(hocFactory.get(\"utils\")(), ...(tempOptions.tempHocs || []))(Temp);\n\n                        return <TempWithHoc\n                            tempKey={key}\n                            ajv={this.props.ajv}\n                            uiSchema={this.props.uiSchema}\n                            schemaId={this.props.schemaId}\n                            arrayLevel={this.props.arrayLevel}\n                            reducerKey={reducerKey}\n                            arrayIndex={this.props.arrayIndex}\n                            globalOptions={this.props.globalOptions}\n                            ArrayComponent={this.props.ArrayComponent}\n                            ArrayItemComponent={this.props.ArrayItemComponent}\n                            initArrayComponent={this.props.initArrayComponent}\n                            parentKeys={this.props.parentKeys}\n                            children={prev} />;\n                    }, <Component {...this.props} />);\n                }\n\n                /**\n                * 获取模板的components\n                */\n                private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n                    const { uiSchema, currentTheme, getOptions } = this.props,\n                        { type, temps } = uiSchema as FxUiSchema,\n                        typeDefaultOptions = getOptions(this.props, schemaFormTypes.field, type as string),\n                        TempComponent: Array<{ key: string, Temp: RC<any, any> }> = [];\n                    let template: Array<any>;\n\n                    if (temps) {\n                        template = temps;\n                    } else if (settings.templates && settings.templates.length > 0) {\n                        template = settings.templates;\n                    } else {\n                        template = typeDefaultOptions[settings.tempField] || \"default\";\n                    }\n\n                    const getTemplate = (tmp: any): void => {\n                        switch (tmp.constructor) {\n                            case String:\n                                if (!currentTheme.tempFactory.has(tmp)) {\n                                    console.error(`不存在${tmp}的temp！`);\n                                } else {\n                                    TempComponent.push({\n                                        key: tmp,\n                                        Temp: currentTheme.tempFactory.get(tmp)\n                                    });\n                                }\n                                break;\n                            case Object:\n                                TempComponent.push({\n                                    key: tmp.name,\n                                    Temp: tmp\n                                });\n                                break;\n                            case Array:\n                                [...template].reverse().forEach((tml, idx) => {\n                                    getTemplate(tml);\n                                });\n                                break;\n                        }\n                    };\n\n                    getTemplate(template);\n\n                    return TempComponent;\n                }\n            }\n\n            return TempComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/temp.tsx","\nimport React, { PureComponent } from \"react\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { createSelectorCreator, defaultMemoize } from \"reselect\";\nimport Immutable, { is } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { RC, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { TreeMap } from \"../libs/tree\";\n\nexport interface DataHocOutProps extends DefaultProps { }\n\n/**\n * HOC的设定参数\n */\nexport interface DataHocSettings {\n    /**\n     * 是否需要root的数据\n     */\n    root?: boolean;\n    /**\n     * 是否需要当前的key的数据\n     */\n    data?: boolean;\n    /**\n     * 是否需要当前key的长度，只能是array格式\n     */\n    dataLength?: boolean;\n    /**\n     * 是否需要当前key对应的meta数据\n     */\n    meta?: boolean;\n    /**\n     * 设置当前key下所需要的meta的key值\n     */\n    metaKeys?: string[];\n    /**\n     * 是否获取meta的根节点\n     */\n    treeNode?: boolean;\n}\n\n// 自定义选择器创建函数\nconst fxSelectorCreator: any = createSelectorCreator(defaultMemoize, is);\n\nexport const name = \"data\";\nexport const hoc = (hocFactory: BaseFactory<RC<DefaultProps, {}>>) => {\n    return (settings: DataHocSettings = {\n        data: true\n    }) => {\n        /**\n         * 与reduce相关的数据操作\n         * 获取formItemData数据\n         * 获取formItemMeta数据\n         */\n        const getItemDataHoc = (parentKeys: string[], rootReducerKey: string[], keys: Array<string | number>) => {\n            /**\n             * 获取FormItemData的数据\n             * @param state 当前的state树\n             */\n            let getFormItemData = (state: Immutable.Map<string, any>) => {\n                let dataKeys: Array<string | number> = [...rootReducerKey, ...parentKeys, \"data\"];\n\n                // 如果配置中root为ture，则取得所有的数据\n                if (settings.root) {\n                    return state.getIn(dataKeys);\n                }\n\n                // 否则根据单个的keys获取\n                dataKeys = [...dataKeys, ...keys];\n                if (settings.data && state.hasIn(dataKeys)) {\n                    let formItemData = state.getIn(dataKeys);\n\n                    if (formItemData !== undefined) {\n                        if (!settings.dataLength) {\n                            return formItemData;\n                        } else {\n                            // 如果是列表，则返回size\n                            if (Immutable.List.isList(formItemData)) {\n                                return formItemData.size;\n                            }\n\n                            return 0;\n                        }\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的数据\n            * @param state 当前的state树\n            */\n            let getFormItemMeta = (state: Immutable.Map<string, any>) => {\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n\n                if (settings.meta && state.hasIn(metaKeys)) {\n                    let rootNode = state.getIn(metaKeys),\n                        childNode = rootNode.containPath([...keys]);\n\n                    if (childNode && childNode.value) {\n                        if (settings.metaKeys) {\n                            return childNode.value.filter((val: any, key: string) => {\n                                if (!settings.metaKeys) {\n                                    return false;\n                                }\n                                return settings.metaKeys.indexOf(key) >= 0;\n                            });\n                        }\n                        return childNode.value;\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的根数据\n            * @param state 当前的state树\n            */\n            let getRoot = (state: Immutable.Map<string, any>) => {\n                if (!settings.treeNode) {\n                    return null;\n                }\n\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n                let rootNode: TreeMap = state.getIn(metaKeys);\n                let childNode = rootNode.containPath([...keys]);\n\n                if (childNode) {\n                    return childNode;\n                }\n\n                return rootNode.addChild([...keys]);\n            };\n\n            /**\n             * re-select来缓存数据\n             */\n            return fxSelectorCreator(\n                [getFormItemData, getFormItemMeta, getRoot],\n                (formItemData: any, formItemMeta: any, formItemNode: TreeMap) => {\n                    const rtn: { formItemData?: any, formItemMeta?: any, formItemNode?: TreeMap } = {};\n\n                    if (formItemData !== undefined && formItemData !== null) {\n                        rtn.formItemData = formItemData;\n                    }\n                    if (formItemMeta !== undefined && formItemMeta !== null) {\n                        rtn.formItemMeta = formItemMeta;\n                    }\n                    if (formItemNode !== undefined && formItemNode !== null) {\n                        rtn.formItemNode = formItemNode;\n                    }\n\n                    return rtn;\n                }\n            );\n        };\n\n        /**\n         * 用于获取数据的hoc\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        return (Component: any): RC<DefaultProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class DataComponentHoc extends PureComponent<DefaultProps & UtilsHocOutProps, any> {\n                private ComponentWithHoc: any = Component;\n\n                constructor(props: DefaultProps & UtilsHocOutProps) {\n                    super(props);\n\n                    const { getOptions } = this.props,\n                        { keys = [] } = this.props.uiSchema || {},\n                        options = getOptions(this.props, schemaFormTypes.hoc, name);\n\n\n                    if (!options.rootReducerKey || options.rootReducerKey.constructor !== Array) {\n                        console.error(\"dataHoc missing property rootReducerKey.should be a Array.\");\n                    } else {\n                        // 获取当前的数据hoc\n                        this.ComponentWithHoc = connect(getItemDataHoc(this.props.parentKeys, options.rootReducerKey, keys))(Component);\n                    }\n                }\n\n                public render(): JSX.Element {\n                    const ComponentWithHoc = this.ComponentWithHoc;\n\n                    return <ComponentWithHoc {...this.props} />;\n                }\n            }\n\n            return DataComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/data.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}\n// module id = 30\n// module chunks = 0","\nimport React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { fromJS } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { schemaFormTypes, RC } from \"../models\";\n\nexport interface Props extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport interface ResetKeysHocOutSettings {\n    excludeKeys: string[];\n    includeKeys: string[];\n}\n\nexport const name = \"resetKey\";\n\n/**\n * resetKey\n * 用来筛选组件中的props\n * 配置：\n *  excludeKeys：需要去掉的属性数组\n *  includeKeys：需要的属性数组\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: ResetKeysHocOutSettings = { excludeKeys: [], includeKeys: [] }) => {\n        return (Component: any): RC<Props, any> => {\n            class ComponentHoc extends React.PureComponent<Props, any> {\n                public render(): JSX.Element {\n                    const { getOptions, getRequiredKeys } = this.props,\n                        normalOptions = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                        extraProps = getRequiredKeys(this.props, normalOptions.includeKeys, normalOptions.excludeKeys);\n\n                    return <Component {...extraProps} />;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/resetkey.tsx","import { fromJS } from \"immutable\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\n\nexport const schemaFormReducer = new SchemaFormReducer(fromJS({}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.tsx","import { createAction, createReducer, SimpleActionCreator, BaseActionCreator, EmptyActionCreator, Action } from \"redux-act\";\nimport { Reducer } from \"redux-act\";\nimport { List, Map, fromJS } from \"immutable\";\nimport { Store } from \"redux\";\n\nimport { FxReducer, d, m } from \"./reducer\";\nimport { TreeMap } from \"../libs/tree\";\nimport merge from \"../libs/merge\";\nimport { isProd } from \"../utils\";\n\nexport type ASN = Array<string | number> | string[];\n\nexport interface SchemaFormActions {\n    [index: string]: SimpleActionCreator<any, any>;\n    removeForm: SimpleActionCreator<ASN>;\n    createForm: SimpleActionCreator<{ key: string, data: any, keepData?: boolean }>;\n    updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>;\n    updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>;\n    addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>;\n    removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>;\n    moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>;\n    removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>;\n    combineActions: SimpleActionCreator<Action<any, any>[]>;\n}\n\n/**\n * 解析一个路径上的数据，判断数据格式，做处理\n * @param state 当前的state\n * @param keys  数据路径\n * @returns newState\n */\nconst resolveKeys = (state: Map<string, any>, keys: Array<string>): Map<string, any> => {\n    if (state.hasIn(keys)) {\n        return state;\n    }\n\n    for (let i = 0, n = keys.length; i < n; i++) {\n        const mKeys = [...keys].splice(0, i + 1);\n\n        // 如果key不存在，遍历生成数据结构\n        if (!state.hasIn(mKeys)) {\n            mKeys.pop();\n            if (!state.hasIn(mKeys)) {\n                if (keys[i].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        } else if (i < n) {\n            // 如果key存在，则判断数据结构是否与结构一致\n            const data = state.getIn(mKeys);\n\n            if (!Map.isMap(data) && !List.isList(data)) {\n                if (keys[i + 1].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        }\n    }\n\n    return state;\n};\n\nexport class SchemaFormReducer<T> implements FxReducer {\n\n    /**\n     * 创建一个表单\n     */\n    private createForm: SimpleActionCreator<{ key: string, data: any }>\n        = createAction<{ key: string, data: any, keepData?: boolean }>(isProd() ? \"\" : \"创建一个表单数据\");\n    /**\n     * 更新一个表单数据\n     */\n    private updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>(isProd() ? \"\" : \"更新一个表单数据\");\n    /**\n     * 更新一个表单元数据\n     */\n    private updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta: any }>(isProd() ? \"\" : \"更新一个表单元数据\");\n    /**\n     * 添加一个元素到数组\n     */\n    private addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any }>(isProd() ? \"\" : \"添加一个数据\");\n    /**\n     * 从数组中删除一个元素\n     */\n    private removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, index: number }>(isProd() ? \"\" : \"删除一个数据\");\n    /**\n     * 移动一个数组元素\n     */\n    private moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>(isProd() ? \"\" : \"元素移位\");\n    /**\n     * 删除一个字段的数据以及元数据\n     */\n    private removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta?: boolean }>(isProd() ? \"\" : \"删除一个字段的数据以及meta数据\");\n    /**\n     * 合并多个action，触发一次dispatch\n     */\n    private combineActions: SimpleActionCreator<Action<any, any>[]>\n        = createAction<Action<any, any>[]>(isProd() ? \"\" : \"合并多个action\");\n\n    private removeForm: SimpleActionCreator<ASN>\n        = createAction<ASN>(isProd() ? \"\" : \"清除一个form的数据\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     */\n    constructor(private initialState: any) { }\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): SchemaFormActions {\n        return {\n            createForm: this.createForm,\n            updateItemData: this.updateItemData,\n            updateItemMeta: this.updateItemMeta,\n            addItem: this.addItem,\n            removeItem: this.removeItem,\n            moveToItem: this.moveToItem,\n            removeItemData: this.removeItemData,\n            combineActions: this.combineActions,\n            removeForm: this.removeForm\n        };\n    }\n\n    /**\n     * 初始化actions\n     * @param store Redux中的store实例\n     */\n    public init(store: Store<Map<string, any>>): void {\n        for (const key in this.actions) {\n            if (this.actions.hasOwnProperty(key)) {\n                const action = this.actions[key];\n\n                if (!action.assigned()) {\n                    action.assignTo(store as any);\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.createForm as any]: this.createFormHandle.bind(this),\n            [this.updateItemData as any]: this.updateItemDataHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateItemMetaHandle.bind(this),\n            [this.addItem as any]: this.addItemDataHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.moveToItem as any]: this.moveItemHandle.bind(this),\n            [this.removeItemData as any]: this.removeItemDataMetaHandle.bind(this),\n            [this.combineActions as any]: this.combineActionsHandle.bind(this),\n            [this.removeForm as any]: this.removeFormHandle.bind(this)\n        }, this.initialState);\n    }\n\n    /**\n     * 清除一个表单数据\n     * @param state   state\n     * @param param1  参数\n     */\n    private removeFormHandle(state: Map<string, any>, parentKeys: ASN) {\n        let dataKeys = parentKeys;\n\n        if (state.hasIn(dataKeys)) {\n            return state.removeIn(dataKeys);\n        }\n\n        return state;\n    }\n\n    /**\n     * 合并多个action\n     * @param state    state\n     * @param actions  需要调用的action\n     */\n    private combineActionsHandle(state: Map<string, any>, actions: Action<any, any>[]) {\n        state = actions.reduce((stateNew: Map<string, any>, act2: Action<any>) => {\n            return this.reducer(stateNew, act2);\n        }, state);\n\n        return state;\n    }\n\n    /**\n     * 删除一个字段的数据以及meta数据\n     * @param state   当前的state\n     * @param param1  参数\n     *  parentKeys  父亲的keys\n     *  keys        当前元素的keys\n     *  meta        是否要删除meta数据\n     */\n    private removeItemDataMetaHandle(state: Map<string, any>, { parentKeys, keys, meta }: any) {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n\n        state = resolveKeys(state, dataKeys);\n\n        if (state.hasIn(dataKeys)) {\n            state = state.removeIn(dataKeys);\n        }\n\n        if (childNode && meta) {\n            childNode.removeFromParent();\n        }\n\n        return state;\n    }\n\n    /**\n     * 创建一份表单数据\n     * @param state   当前的state\n     * @param param1  参数值，key 和 data\n     */\n    private createFormHandle(state: Map<string, any>, { key, data, keepData }: any): Map<string, any> {\n        let originData = data;\n\n        // 如果存在key\n        if (state.has(key)) {\n            // 如果要保存数据\n            if (keepData) {\n                originData = state.getIn([key, \"data\"]);\n            }\n            state = state.remove(key);\n        }\n\n        const meta = new TreeMap(key, fromJS({}));\n        const stateData = Map<string, any>({\n            meta: meta,\n            data: fromJS(originData)\n        });\n\n        return state.set(key, stateData);\n    }\n    /**\n     * 修改一个数据\n     * 合并parrentKeys和keys，中间加入一个“data”\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemDataHandle(state: Map<string, any>, { parentKeys, keys, data, meta }: any): Map<string, any> {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n\n        state = resolveKeys(state, dataKeys);\n        state = state.setIn(dataKeys, fromJS(data));\n\n        if (meta) {\n            state = this.updateItemMetaHandle(state, { parentKeys, keys, meta });\n        }\n\n        return state;\n    }\n\n    /**\n     * 添加一个数组到List\n     * 1. 添加数组\n     * 2. 修改meta中的collapsing字段为false，使得折叠的状态改变成不折叠的状态\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private addItemDataHandle(state: Map<string, any>, { parentKeys, keys, data }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys);\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys) || List();\n        formItemData = formItemData.push(fromJS(data));\n\n        if (childNode && childNode.value) {\n            childNode.value = childNode.value.merge({\n                collapsing: false\n            });\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 删除数组中的一个元素\n     * 1. 删除元素数组中的数据\n     * 2. 删除meta信息中的数据\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private removeItemHandle(state: Map<string, any>, { parentKeys, keys, index }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.addChild(keys.concat([index]));\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys);\n\n        if (!formItemData || !List.isList(formItemData)) {\n            return state;\n        }\n\n        if (childNode) {\n            childNode.removeFromParent();\n        }\n\n        return state.setIn(dataKeys, formItemData.remove(index));\n    }\n\n    /**\n     * 交换2个数组的位置\n     * 1. 交换数组数据\n     * 2. 交换meta中的位置信息\n     * @param state   当前的state\n     * @param param1  参数\n     *   parentKeys    父亲的keys\n     *   keys          当前item的keys\n     *   curIndex      当前item的索引\n     *   toIndex       需要交换的item索引\n     */\n    private moveItemHandle(state: Map<string, any>, { parentKeys, keys, curIndex, toIndex }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            offset = (toIndex > curIndex && false ? 1 : 0);\n        let oldFormItemData: List<any> = state.getIn(dataKeys),\n            formItemData: List<any> = state.getIn(dataKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys.concat([curIndex])),\n            childNodeTo: TreeMap | null = rootNode.containPath(keys.concat([toIndex]));\n\n        state = resolveKeys(state, dataKeys);\n\n        if (!formItemData || toIndex < 0) {\n            return state;\n        }\n\n        let curItemData = formItemData.get(curIndex);\n\n        formItemData = formItemData.remove(curIndex);\n        formItemData = formItemData.insert(toIndex - offset, curItemData);\n\n        if (childNode) {\n            childNode.insertToFromParent(toIndex);\n        } else {\n            if (childNodeTo) {\n                childNodeTo.insertToFromParent(curIndex);\n            }\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 修改一个数据的元数据\n     * 通过parentKeys取得根节点\n     * 通过keys合成元素的节点路径，从根节点获取数据\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemMetaHandle(state: Map<string, any>, { parentKeys, keys, meta, noChange }: any): Map<string, any> {\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n        let value = childNode ? childNode.value : null;\n\n        // 如果childNode不存在，则新建一个\n        if (!childNode) {\n            childNode = rootNode.addChild(keys);\n        }\n\n        // 判断childNode，如果存在value，则合并value，否则创建value\n        if (childNode) {\n            if (value) {\n                childNode.value = merge(childNode.value, fromJS(meta), { \"*\": \"replace\" });\n            } else {\n                childNode.value = fromJS(meta);\n            }\n        }\n\n        if (noChange) {\n            return state;\n        }\n\n        // 生成新的TreeMap\n        let newRoot = new TreeMap(rootNode.getKey(), rootNode.value);\n\n        newRoot.children = rootNode.children;\n\n        return state.setIn(metaKeys, newRoot);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/schema.form.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}\n// module id = 34\n// module chunks = 0","import React, { PureComponent } from \"react\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../index\";\nimport { hoc } from \"./container\";\nimport { MergeHocOutProps } from \"../../hocs/merge\";\nimport { SchemaFormItem } from \"../formitem/index\";\nimport { FxUiSchema } from \"../../models/index\";\n\nexport interface Props extends DefaultProps, MergeHocOutProps {\n    RootComponent?: any;\n    uiSchemas?: Array<string | FxUiSchema>;\n}\n\n@(hoc as any)\nexport class SchemaForm extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { schemaId, mergeSchemaList, arrayLevel, RootComponent, children, ...extraProps } = this.props;\n        const formItemList = mergeSchemaList ? mergeSchemaList.map((uiScehma: FxUiSchema, idx: number) => {\n            let arrayLevelCopy = arrayLevel ? arrayLevel.concat([]) : [];\n\n            return <SchemaFormItem\n                key={idx}\n                {...extraProps}\n                schemaId={schemaId}\n                uiSchema={uiScehma}\n                arrayLevel={arrayLevelCopy}\n            />;\n        }) : [];\n\n        if (RootComponent) {\n            return <RootComponent >\n                {formItemList}\n                {children}\n            </RootComponent>;\n        }\n\n        return (\n            <div>\n                {formItemList}\n                {children}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/component.tsx","import { compose, ComponentEnhancer, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    shouldUpdate(() => false),\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"merge\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/container.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"redux\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../default.props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"../../hocs/field\";\nimport { UtilsHocOutProps } from \"../../hocs/utils\";\nimport { isProd } from \"../../utils\";\n\nexport interface Props extends DefaultProps {\n\n}\n\n@(hoc as any)\nexport class SchemaFormItem extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { FieldComponent, uiSchema, ...extraProps } = this.props as Props & FieldHocOutProps & UtilsHocOutProps;\n        const options = extraProps.getOptions(this.props, \"field\", (uiSchema as any).field || (uiSchema as any).type);\n        let FieldComponentWithHoc: any = FieldComponent;\n\n        if (!FieldComponent) {\n            if (!isProd()) { console.warn(uiSchema, \"没有找到匹配的field\"); }\n            return null;\n        }\n\n        if (options.fieldHocs && options.fieldHocs.length) {\n            FieldComponentWithHoc = compose(\n                ...(options.fieldHocs || [])\n            )(FieldComponent);\n        }\n\n        return <FieldComponentWithHoc key={(uiSchema as any).keys.join(\"formItem\")} uiSchema={uiSchema} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/component.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}\n// module id = 39\n// module chunks = 0","import { compose, ComponentEnhancer } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"make\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/container.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}\n// module id = 41\n// module chunks = 0","import { default as normalField, NormalField, name as n1 } from \"./normal\";\nimport { default as objectField, ObjectField, name as n2 } from \"./object\";\nimport { default as arrayField, ArrayField, name as n3 } from \"./array\";\n\nexport default [normalField, objectField, arrayField];\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/index.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { FieldHocOutProps } from \"../hocs/field\";\n\nexport interface NormalFieldProps extends DefaultProps, UtilsHocOutProps, FieldHocOutProps {\n\n}\n\nexport const name = \"normal\";\n\n/**\n * 普通数据字段类型\n * 这里直接渲染[fieldHoc]中结算得出的WidgetComponent\n */\nexport class NormalField extends PureComponent<NormalFieldProps> {\n\n    constructor(props: NormalFieldProps, context: any) {\n        super(props, context);\n    }\n\n    public render(): JSX.Element | null {\n        const { WidgetComponent, FieldComponent, formItemMeta, formItemData, ...extraProps } = this.props,\n            fieldOptions = extraProps.getOptions(this.props, schemaFormTypes.field, name),\n            { keys } = extraProps.uiSchema as FxUiSchema;\n        let WidgetComponentWithHoc = WidgetComponent;\n\n        if (!WidgetComponent || !keys) {\n            return null;\n        }\n\n        if (fieldOptions.widgetHocs && fieldOptions.widgetHocs.length) {\n            WidgetComponentWithHoc = (compose(\n                ...fieldOptions.widgetHocs\n            ) as any)(WidgetComponent);\n        }\n\n        return (\n            <WidgetComponentWithHoc key={keys.join(\".\")} {...extraProps} />\n        );\n    }\n}\n\nexport default {\n    [name]: NormalField,\n    default: NormalField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/normal.tsx","import React, { PureComponent } from \"react\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { DefaultProps } from \"../components\";\nimport { schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { compose } from \"recompose\";\n\nexport interface ObjectFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport const name = \"object\";\n\n/**\n * Object类型的字段解析\n * 嵌套一层SchemaForm\n */\nexport class ObjectField extends PureComponent<ObjectFieldProps, any> {\n    public render(): JSX.Element | null {\n        const { arrayIndex, arrayLevel, parentKeys, globalOptions, ajv, getOptions, reducerKey, uiSchema } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = SchemaForm;\n\n        // 如果children设置成null，则返回空\n        if (!uiSchema || uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // 如果需要对schemaform对hoc包装\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(SchemaForm as any);\n        }\n\n        return (\n            <SchemaFormWithHoc\n                arrayIndex={arrayIndex}\n                arrayLevel={arrayLevel}\n                RootComponent={options.Root}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"*\"]}\n                uiSchema={uiSchema}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n}\n\nexport default {\n    [name]: ObjectField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/object.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\n\nimport { SchemaForm } from \"../components/form\";\n// import { hocFactory } from \"../factory\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface ArrayFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nlet arrayFieldStyle = {\n    width: \"100%\",\n    height: \"100%\"\n};\n\nclass ArrayFieldComponent extends React.PureComponent {\n    public render() {\n        return <div style={arrayFieldStyle}>{this.props.children}</div>;\n    }\n}\n\nexport const name = \"array\";\n\n/**\n * 数组结构的字段解析\n * 这里需要数组元素的个数来做循环\n * 循环生成元素个数的SchemaForm\n */\nexport class ArrayField extends PureComponent<ArrayFieldProps, any> {\n    private SchemaFormWithHoc: any = ArrayFieldComponent;\n    private SchemaFormItemWithHoc: any;\n\n    constructor(props: ArrayFieldProps) {\n        super(props);\n\n        this.initComponent();\n    }\n\n    /**\n     * 初始化Component\n     */\n    private initComponent() {\n        const { getOptions } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc = null, SchemaFormItemWithHoc = null;\n\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(options.ArrayFieldComponent || ArrayFieldComponent);\n        }\n\n        if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n            SchemaFormItemWithHoc = compose(...options.formItemHocs)(SchemaForm as any);\n        }\n\n        this.SchemaFormWithHoc = SchemaFormWithHoc;\n        this.SchemaFormItemWithHoc = SchemaFormItemWithHoc;\n    }\n\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element | null {\n        const { parentKeys, globalOptions, getOptions, arrayLevel = [], getRequiredKeys, ajv, reducerKey, ArrayItemComponent } = this.props,\n            uiSchema = this.props.uiSchema as FxUiSchema,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = this.SchemaFormItemWithHoc || SchemaForm;\n        // const extraProps = getRequiredKeys(this.props, options);\n\n        // 如果不需要children，则跳出\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // // 如果需要对schemaform对hoc包装\n        // if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        // }\n\n        return (\n            <SchemaFormWithHoc\n                key={idx}\n                arrayIndex={idx}\n                uiSchema={uiSchema}\n                RootComponent={options.Root}\n                ArrayItemComponent={ArrayItemComponent}\n                arrayLevel={arrayLevel.concat([idx])}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"-\"]}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { uiSchema, formItemData, getOptions, getRequiredKeys } = this.props, child = [],\n            options = getOptions(this.props, schemaFormTypes.field, name),\n            SchemaFormWithHoc = this.SchemaFormWithHoc,\n            { fieldIncludeKeys, fieldExcludeKeys } = options,\n            extraProps = getRequiredKeys(this.props, fieldIncludeKeys, fieldExcludeKeys);\n\n        for (let i = 0; i < +formItemData; i++) {\n            child.push(this.renderItem(i));\n        }\n\n        // 如果需要对schemaform对hoc包装\n        // if (options.formHocs && options.formHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formHocs)(({ children }) => {\n        //         return <div style={arrayFieldStyle}>{children}</div>;\n        //     });\n\n        //     return <SchemaFormWithHoc {...this.props} children={child} />;\n        // }\n\n        return <SchemaFormWithHoc children={child} {...extraProps} />;\n    }\n}\n\nexport default {\n    [name]: ArrayField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, withHandlers } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { fromJS, Map, List } from \"immutable\";\nimport { schemaKeysFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { ErrorObject, ValidationError } from \"ajv\";\n\nimport { DefaultProps } from \"../components\";\nimport { RC, schemaFormTypes } from \"../models\";\nimport { hocFactory, errorFactory } from \"../factory\";\nimport { TreeMap, Tsn } from \"./tree\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { d, m } from \"../reducers/reducer\";\n\nexport interface SchemaFormHocSettings {\n    rootReducerKey: string[];\n    parentKeys: string[];\n    errorText?: (err: ErrorObject, props: DefaultProps, keys: Tsn[]) => string;\n}\n\nexport interface SchemaFormProps extends SchemaFormHocOutProps {\n    root?: TreeMap;\n    data?: any;\n    errors?: any;\n    isValid?: boolean;\n    isValidating?: boolean;\n\n    formKey?: string;\n    initData?: any;\n    shouldResetForm?: boolean;\n    keepData?: boolean;\n}\n\nexport interface SchemaFormHocOutProps {\n    validateAll?: ($async?: boolean) => Promise<any>;\n    resetForm?: (keepData?: boolean) => Promise<void>;\n}\n\nexport const name = \"schemaFormDec\";\n\n/**\n * 提供全部验证等功能\n * @param Component 需要包装的组件\n */\nexport default (settings: SchemaFormHocSettings = { rootReducerKey: [], parentKeys: [] }) => {\n    return (Component: any): RC<SchemaFormProps & DefaultProps, any> => {\n        // const keep\n        @(compose(\n            hocFactory.get(\"utils\")(),\n            // 绑定数据\n            connect((state: Map<string, any>) => {\n                let rootKeys = settings.rootReducerKey.concat(settings.parentKeys),\n                    dataKeys = rootKeys.concat([d]),\n                    metaKeys = rootKeys.concat([m]),\n                    root = state.getIn(metaKeys);\n\n                return {\n                    data: state.getIn(dataKeys),\n                    root: root,\n                    isValid: root ? root.value.get(\"isValid\") : true,\n                    errors: root ? root.value.get(\"errors\") : null,\n                    isValidating: root ? root.value.get(\"isLoading\") : false\n                };\n            }),\n            withHandlers<any, any>({\n                /**\n                 * 验证所有的字段\n                 */\n                validateAll: (props: SchemaFormProps & DefaultProps & UtilsHocOutProps) => {\n                    const { updateItemMeta } = props.getActions(props);\n                    const options = props.getOptions(props, schemaFormTypes.hoc, name, fromJS(settings));\n                    let timeId: any;\n\n                    /**\n                     * 验证所有字段\n                     * async : boolean 是否是异步的\n                     */\n                    return async (async?: boolean) => {\n                        let root = props.root as TreeMap,\n                            curAjv = props.ajv,\n                            dataRaw = props.data,\n                            validate = props.ajv.getSchema(props.schemaId),\n                            $validateBeforeData = fromJS({\n                                dirty: true,\n                                isValid: true,\n                                isLoading: true\n                            }),\n                            $validateAfterData = fromJS({ isLoading: false, dirty: true }),\n                            normalizeDataPath = props.normalizeDataPath;\n\n                        // 如果没有root，则跳出\n                        if (!root) {\n                            return;\n                        }\n\n                        // 如果没有validate，则报错\n                        if (!validate) {\n                            throw new Error(`没有找到对应的${props.schemaId};`);\n                        }\n\n                        try {\n                            // 将所有的字段的meta数据标准化\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateBeforeData);\n                                }\n\n                                return $validateBeforeData;\n                            }, true);\n                            // 验收更新meta数据\n                            timeId = setTimeout(() => {\n                                updateItemMeta({\n                                    parentKeys: options.parentKeys,\n                                    keys: [],\n                                    meta: root.value\n                                });\n                            }, 200);\n\n                            if (Map.isMap(dataRaw) || List.isList(dataRaw)) {\n                                dataRaw = dataRaw.toJS();\n                            }\n\n                            // 验证数据\n                            curAjv.errors = undefined;\n                            if (!await validate(dataRaw)) {\n                                if (!validate.errors) {\n                                    validate.errors = [];\n                                }\n                                throw new (ValidationError as any)(validate.errors.concat(curAjv.errors || []));\n                            }\n\n                            // 设置成功的标志位\n                            root.value = root.value.merge({\n                                isValid: true\n                            });\n\n                            // 提交meta数据\n                            updateItemMeta({\n                                parentKeys: options.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        } catch (e) {\n                            // 错误的逻辑\n                            if (!(e instanceof (ValidationError as any))) {\n                                return {\n                                    isValid: false,\n                                    errMsg: e.message\n                                };\n                            }\n\n                            // 处理错误\n                            e.errors.forEach((element: ErrorObject) => {\n                                const dataKeys = root.getCurrentKeys().concat(normalizeDataPath(props.schemaId, element.dataPath));\n                                let childNode = root.containPath(dataKeys);\n\n                                if (!childNode) {\n                                    childNode = root.addChild(dataKeys, fromJS({}));\n                                }\n\n                                if (childNode) {\n                                    let errorText = \"\";\n\n                                    if (options.errorText) {\n                                        errorText = options.errorText(element, props, dataKeys);\n                                    }\n\n                                    childNode.value = childNode.value.merge($validateAfterData).merge({\n                                        isValid: false,\n                                        errorText: errorText || errorFactory.get(\"single\")([element], Object.assign({}, props, {\n                                            uiSchema: schemaFieldFactory.get(schemaKeysFactory.get(dataKeys.join(\"/\")))\n                                        }), dataKeys)\n                                    });\n                                }\n                            });\n\n                            root.value = root.value.merge({\n                                isValid: false,\n                                errors: e.errors\n                            });\n                        } finally {\n                            clearTimeout(timeId);\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateAfterData);\n                                }\n\n                                return node.value;\n                            }, true);\n\n                            updateItemMeta({\n                                parentKeys: options.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        }\n\n                        return {\n                            isValid: root.value.get(\"isValid\"),\n                            data: dataRaw\n                        };\n                    };\n                },\n                resetForm: (props: SchemaFormProps & DefaultProps & UtilsHocOutProps) => {\n                    return async (keepData?: boolean) => {\n                        const { formKey, shouldResetForm, keepData: pKeepData, ajv, getDefaultData, initData = {}, schemaId } = props;\n\n                        if (formKey && shouldResetForm !== false) {\n                            let { createForm } = props.getActions(props);\n                            let schema: any = ajv.getSchema(schemaId).schema;\n\n                            if (createForm && schema) {\n                                createForm({\n                                    key: formKey,\n                                    keepData: typeof keepData === \"undefined\" ? pKeepData : keepData,\n                                    data: await getDefaultData(ajv, schema, initData, {}, true)\n                                });\n                            }\n                        }\n                    };\n                }\n            })) as any)\n        class SchemaFormComponentHoc extends PureComponent<SchemaFormProps & DefaultProps & UtilsHocOutProps, any> {\n            private _validateAll: (async?: boolean) => Promise<void>;\n\n            constructor(props: SchemaFormProps & DefaultProps & UtilsHocOutProps) {\n                super(props);\n\n                // 绑定当前的方法，可以使用autobind\n                if (props.validateAll) {\n                    this._validateAll = props.validateAll.bind(this);\n                }\n\n                // 这里创建一个form，如果当前存在formKey，则覆盖掉当前的数据\n                if (props.resetForm) {\n                    props.resetForm();\n                }\n            }\n\n            public render(): JSX.Element | null {\n                const { getRequiredKeys, getOptions, schemaId } = this.props,\n                    options = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                    extraProps = getRequiredKeys(this.props, options.hocIncludeKeys, options.hocExcludeKeys);\n\n                return (\n                    <Component\n                        validateAll={this._validateAll}\n                        parentKeys={options.parentKeys}\n                        schemaId={schemaId}\n                        {...extraProps} />\n                );\n            }\n        }\n\n        return SchemaFormComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/dec.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}