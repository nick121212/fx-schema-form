{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cb0199df531c22cb609f","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}","webpack:///./src/models/index.tsx","webpack:///external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}","webpack:///external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}","webpack:///./src/factory.tsx","webpack:///external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/libs/merge.tsx","webpack:///./src/utils.tsx","webpack:///./src/components/form/index.tsx","webpack:///external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}","webpack:///./src/reducers/reducer.tsx","webpack:///./src/libs/tree.tsx","webpack:///./src/components/formitem/index.tsx","webpack:///./src/components/default.props.tsx","webpack:///./src/index.tsx","webpack:///./src/hocs/index.tsx","webpack:///./src/hocs/merge.tsx","webpack:///./src/hocs/utils.tsx","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}","webpack:///./src/hocs/theme.tsx","webpack:///./src/hocs/field.tsx","webpack:///./src/hocs/array.tsx","webpack:///./src/hocs/validate.tsx","webpack:///./src/hocs/make.tsx","webpack:///./src/hocs/temp.tsx","webpack:///./src/hocs/data.tsx","webpack:///external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}","webpack:///./src/hocs/resetkey.tsx","webpack:///./src/reducer.tsx","webpack:///./src/reducers/schema.form.tsx","webpack:///external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}","webpack:///./src/components/form/component.tsx","webpack:///./src/components/form/container.tsx","webpack:///./src/components/formitem/component.tsx","webpack:///external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}","webpack:///./src/components/formitem/container.tsx","webpack:///external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}","webpack:///./src/fields/index.tsx","webpack:///./src/fields/normal.tsx","webpack:///./src/fields/object.tsx","webpack:///./src/fields/array.tsx","webpack:///./src/libs/dec.tsx","webpack:///external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_34__","__WEBPACK_EXTERNAL_MODULE_39__","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_47__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","schemaFormTypes","hoc","widget","template","field","reducerFactory","__WEBPACK_IMPORTED_MODULE_0_fx_schema_form_core__","hocFactory","themeFactory","errorFactory","__WEBPACK_IMPORTED_MODULE_1__hocs__","forEach","add","__WEBPACK_IMPORTED_MODULE_2__reducer__","element","dataKeys","pop","message","customMerge","param1","param2","mergeFnc","__WEBPACK_IMPORTED_MODULE_0_immutable__","isIterable","Error","concat","isMap","merge","op","type","constructor","isSet","isOrderedSet","toOrderedSet","doSetOp","__webpack_exports__","mergeDeep","schema","_typeof","keys","length","isStack","schemaType","merged","isList","isOrderedMap","value","key","has","subSchema","undefined","set","isProd","NODE_ENV","__WEBPACK_IMPORTED_MODULE_0__component__","propTypes","assign","__WEBPACK_IMPORTED_MODULE_1__default_props__","TreeMap","parent","children","addChild","curNode","child","shift","isNumber","Number","contains","toString","push","getKey","getIndexInParent","getCurrentKeys","_child","containPath","node","removeFromParent","index","splice","insertToFromParent","toIndex","curIndex","splitIndex","clearFunc","arguments","DefaultPropsTypeCheck","schemaId","__WEBPACK_IMPORTED_MODULE_0_prop_types___default","a","string","isRequired","uiSchema","parentKeys","array","globalOptions","ajv","arrayIndex","number","arrayLevel","formItemData","any","formItemMeta","ArrayItemComponent","defaultTheme","tempFactory","fieldFactory","widgetFactory","__WEBPACK_IMPORTED_MODULE_4__fields__","__WEBPACK_IMPORTED_MODULE_1__factory__","__WEBPACK_IMPORTED_MODULE_6__libs_dec__","bind","schemaFormDec","__WEBPACK_IMPORTED_MODULE_5__libs_tree__","SchemaForm","__WEBPACK_IMPORTED_MODULE_2__components__","__WEBPACK_IMPORTED_MODULE_3__models__","SchemaFormItem","__WEBPACK_IMPORTED_MODULE_7__libs_merge__","hocs","__WEBPACK_IMPORTED_MODULE_0__merge__","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__theme__","__WEBPACK_IMPORTED_MODULE_3__field__","__WEBPACK_IMPORTED_MODULE_4__array__","__WEBPACK_IMPORTED_MODULE_5__validate__","__WEBPACK_IMPORTED_MODULE_6__make__","__WEBPACK_IMPORTED_MODULE_7__temp__","__WEBPACK_IMPORTED_MODULE_8__data__","__WEBPACK_IMPORTED_MODULE_9__resetkey__","Component","_PureComponent","MergeComponentHoc","props","originKeys","__WEBPACK_IMPORTED_MODULE_1_fx_schema_form_core__","uiSchemas","_this","_mergeUiSchemaList","mergeUiSchemaList","map","v","mergeKeys","mergeSchema","_props$arrayLevel","arrayLevelCopy","reverse","render","_a","extraProps","__rest","__WEBPACK_IMPORTED_MODULE_0_react___default","createElement","mergeSchemaList","__WEBPACK_IMPORTED_MODULE_0_react__","normalizeDataPath","dataPath","replace","split","isInteger","slice","unshift","__WEBPACK_IMPORTED_MODULE_2_fx_schema_form_core__","join","__WEBPACK_IMPORTED_MODULE_1_react___default","getTitle","getPathKeys","getOptions","getRequiredKeys","getDefaultData","getActions","getPathProps","path","propsCur","raw","actions","__WEBPACK_IMPORTED_MODULE_7__factory__","reducerKey","includeKeys","excludeKeys","Array","_ref","category","_ref$uiSchema","options","_uiSchema$type","optionsArray","ks","__WEBPACK_IMPORTED_MODULE_3_immutable___default","Map","fromJS","hasIn","getIn","__WEBPACK_IMPORTED_MODULE_5__models__","extraSettings","_key","reduce","prev","next","__WEBPACK_IMPORTED_MODULE_3_immutable__","__WEBPACK_IMPORTED_MODULE_6__libs_merge__","*","toJS","_ref2","title","_key2","sets","keyTitle","keysCopy","keysResolve","__WEBPACK_IMPORTED_MODULE_4_resolve_pathname___default","data","defaultData","needMerge","defaultValue","mergeData","dataOfType","mData","validate","properties","_context","t1","__WEBPACK_IMPORTED_MODULE_1_react__","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","done","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","theme","nsFactory","currentTheme","_props","FieldComponent","WidgetComponent","calcField","calcWidget","console","error","warn","commHoc","__WEBPACK_IMPORTED_MODULE_2_recompose__","addItem","__awaiter","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_callee","_props$uiSchema","items","dData","removeItem","moveItem","moveToItem","initArrayComponent","ArrayComponent","_props$uiSchema2","ArrayComponentHoc","_this2","initArrayComponents","_inherits","hocOptions","__decorate","__metadata","ArrayPureComponentHoc","_React$PureComponent","PureComponent","settings","meta","timeId","validateFunc","schemaInCache","dirty","isValid","isLoading","setTimeout","updateItemMeta","errorText","schemaPath","getSchema","$id","__WEBPACK_IMPORTED_MODULE_3_fx_schema_form_core__","$ref","compile","errors","t0","errorsText","dataVar","clearTimeout","updateItemData","_ref2$keys","noChange","_ref3$keys","_context2","t2","t4","t5","t6","removeItemData","_ref4","_ref5$keys","combineActions","updateItemDataRaw","updateItemMetaRaw","removeItemDataRaw","uiSchemaHocs","__WEBPACK_IMPORTED_MODULE_2_immutable___default","ComponentWithHocs","__WEBPACK_IMPORTED_MODULE_1_recompose__","apply","hoc1","tempField","templates","getTemplates","Temp","tempOptions","__WEBPACK_IMPORTED_MODULE_2__models__","TempWithHoc","tempHocs","tempKey","_props2","temps","typeDefaultOptions","TempComponent","getTemplate","tmp","String","tml","idx","fxSelectorCreator","__WEBPACK_IMPORTED_MODULE_2_reselect__","getItemDataHoc","rootReducerKey","dataLength","List","size","metaKeys","childNode","filter","val","treeNode","rootNode","formItemNode","rtn","DataComponentHoc","ComponentWithHoc","_ref$keys","__WEBPACK_IMPORTED_MODULE_4__models__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","normalOptions","__WEBPACK_IMPORTED_MODULE_1_immutable__","schemaFormReducer","resolveKeys","mKeys","setIn","SchemaFormReducer","initialState","createForm","__WEBPACK_IMPORTED_MODULE_0_redux_act__","__WEBPACK_IMPORTED_MODULE_5__utils__","removeForm","init","store","action","assigned","assignTo","removeFormHandle","removeIn","combineActionsHandle","stateNew","act2","reducer","removeItemDataMetaHandle","createFormHandle","remove","__WEBPACK_IMPORTED_MODULE_3__libs_tree__","stateData","updateItemDataHandle","_ref3","updateItemMetaHandle","addItemDataHandle","collapsing","removeItemHandle","_ref5","moveItemHandle","_ref6","childNodeTo","curItemData","insert","_ref7","__WEBPACK_IMPORTED_MODULE_4__libs_merge__","newRoot","_createReducer","RootComponent","formItemList","uiScehma","__WEBPACK_IMPORTED_MODULE_2__formitem_index__","__WEBPACK_IMPORTED_MODULE_1__container__","__WEBPACK_IMPORTED_MODULE_0_recompose__","FieldComponentWithHoc","fieldHocs","__WEBPACK_IMPORTED_MODULE_1_redux__","__WEBPACK_IMPORTED_MODULE_3__utils__","__WEBPACK_IMPORTED_MODULE_2__container__","__WEBPACK_IMPORTED_MODULE_0__normal__","__WEBPACK_IMPORTED_MODULE_1__object__","__WEBPACK_IMPORTED_MODULE_2__array__","NormalField","fieldOptions","WidgetComponentWithHoc","widgetHocs","_name$default","default","ObjectField","SchemaFormWithHoc","__WEBPACK_IMPORTED_MODULE_1__components_form__","formHocs","__WEBPACK_IMPORTED_MODULE_3_recompose__","Root","_name","arrayFieldStyle","width","height","ArrayFieldComponent","style","ArrayField","initComponent","SchemaFormItemWithHoc","formItemHocs","__WEBPACK_IMPORTED_MODULE_3__components_form__","renderItem","fieldIncludeKeys","fieldExcludeKeys","SchemaFormComponentHoc","validateAll","_validateAll","resetForm","__WEBPACK_IMPORTED_MODULE_6__models__","__WEBPACK_IMPORTED_MODULE_4_immutable__","hocIncludeKeys","hocExcludeKeys","__WEBPACK_IMPORTED_MODULE_3_react_redux__","rootKeys","__WEBPACK_IMPORTED_MODULE_8__reducers_reducer__","isValidating","curAjv","dataRaw","$validateBeforeData","$validateAfterData","__WEBPACK_IMPORTED_MODULE_5_ajv__","errMsg","_callee2","formKey","shouldResetForm","_props$initData","initData","_props$getActions2"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SFR\", [\"react\", \"recompose\", \"immutable\", \"fx-schema-form-core\", \"react-redux\", \"resolve-pathname\", \"reselect\", \"redux-act\", \"redux\", \"prop-typese\", \"ajv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SFR\"] = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse\n\t\troot[\"SFR\"] = factory(root[\"React\"], root[\"recompose\"], root[\"Immutable\"], root[\"SFC\"], root[\"react-redux\"], root[\"resolve-pathname\"], root[\"reselect\"], root[\"redux-act\"], root[\"Redux\"], root[\"prop-types\"], root[\"Ajv\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_47__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb0199df531c22cb609f","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}\n// module id = 0\n// module chunks = 0","import React from \"react\";\nimport { Map } from \"immutable\";\nimport { BaseFactory, UiSchema } from \"fx-schema-form-core\";\nimport { DefaultProps } from \"../components\";\n\nexport interface SchemaFormNs<F, T, W> {\n    fieldFactory: BaseFactory<F>;\n    tempFactory: BaseFactory<T>;\n    widgetFactory: BaseFactory<W>;\n}\n\nexport type RC<P, T> = new () => React.PureComponent<P, T>;\nexport interface FxUiSchema extends UiSchema {\n    // 定义参数，与全局的配置参数格式一致；会覆盖全局的配置参数，用于单个FormSchemaItem的配置。\n    options?: Map<string, any>;\n    // \b一般用于object和array的对象；用于渲染下级显示的key。\n    children?: Array<UiSchema | string>;\n    // 主题样式配置（default: default）\n    theme?: string;\n    // 定义字段。默认使用JsonSchema的type来确定field，也可以使用这个来指定字段。\n    field?: string;\n    // 定义显示组件。每种数据类型都可以使用不同的组件来渲染。\n    widget?: string;\n    // 定义包裹的模板数组\n    temps?: string[];\n    // 是否是required，自动添加\n    isRequired?: boolean;\n    // $ref的keys，自动添加\n    refKeys?: string[];\n    // keys的原始形式，不会对-做数字化处理（只有数组类型的originKeys和keys是不同的）\n    originKeys?: string[];\n    // 是否只读\n    readonly?: boolean;\n    // 用于包裹整个ShemaFormItem的hoc数组\n    hocs?: any[];\n    // 数据更改的时候触发的方法\n    onValueChanged?: <T>(props: DefaultProps, data: T) => void;\n    // 数组的默认添加数据\n    defaultData?: any;\n    // 数据的format验证\n    format: string;\n}\nexport type NsFactory = SchemaFormNs<RC<any, any>, RC<any, any>, RC<any, any>>;\n\nexport const schemaFormTypes = {\n    hoc: \"hoc\",\n    widget: \"widget\",\n    template: \"temp\",\n    field: \"field\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}\n// module id = 3\n// module chunks = 0","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { ErrorObject } from \"ajv\";\n\nimport { FxReducer } from \"./reducers/reducer\";\nimport { DefaultProps } from \"./components\";\nimport { NsFactory, SchemaFormNs } from \"./models\";\nimport { hocs } from \"./hocs\";\nimport { schemaFormReducer } from \"./reducer\";\nimport { Tsn } from \"./libs/tree\";\n\nexport const reducerFactory = new BaseFactory<FxReducer>();\nexport const hocFactory = new BaseFactory<(settings?: any) => new () => React.PureComponent<DefaultProps, any>>();\nexport const themeFactory = new BaseFactory<NsFactory>();\nexport const errorFactory = new BaseFactory<(element: ErrorObject, dataKeys: Tsn[]) => string>();\n\nhocs.forEach((hoc: { name: string, hoc: (hocFactory: BaseFactory<any>) => any }) => {\n    hocFactory.add(hoc.name, hoc.hoc(hocFactory));\n});\n\nreducerFactory.add(\"schemaForm\", schemaFormReducer);\n\nerrorFactory.add(\"default\", (element: ErrorObject, dataKeys: Tsn[]) => {\n    return dataKeys.pop() + \" \" + element.message;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}\n// module id = 5\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 6\n// module chunks = 0","import { Iterable, Map, OrderedMap, List, OrderedSet, Set, Stack } from \"immutable\";\n\nfunction doSetOp(param1: any, param2: any, op: string) {\n    const type = param1.constructor.name;\n\n    if (Set.isSet(param1) || OrderedSet.isOrderedSet(param1)) {\n        return param1[op](param2);\n    }\n\n    return param1.toOrderedSet()[op](param2)[`to${type}`]();\n}\n\nfunction customMerge(param1: any, param2: any, mergeFnc: any) {\n    if (typeof mergeFnc === \"function\") {\n        return mergeFnc(param1, param2);\n    }\n\n    switch (mergeFnc) {\n        case \"replace\":\n            return param2;\n        case \"append\":\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"append\" merge function`);\n            }\n            return param1.concat(param2);\n        case \"prepend\":\n            if (!Iterable.isIterable(param2)) {\n                throw new Error(`Non-iterable passed to \"prepend\" merge function`);\n            }\n            return param2.concat(param1);\n        case \"union\":\n            if (Map.isMap(param1)) {\n                return param1.merge(param2);\n            }\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"union\" merge function`);\n            }\n            return doSetOp(param1, param2, \"union\");\n        default:\n            throw new Error(`Unknown merge function \"${mergeFnc}\"`);\n    }\n}\n\nfunction mergeDeep(param1: any, param2: any, schema?: any) {\n    // there\"s no schema defined => native merge or override\n    if (!schema || (typeof schema === \"object\" && Object.keys(schema).length === 0)) {\n        return Iterable.isIterable(param1) && !Stack.isStack(param1) ? param1.mergeDeep(param2) : param2;\n    }\n\n    const schemaType = typeof schema;\n\n    // no keys in schema, merging is handled by custom merge function\n    if (schemaType === \"string\" || schemaType === \"function\") {\n        return customMerge(param1, param2, schema);\n    }\n\n    // at this point anything other than object as a schema should be handled above\n    if (schemaType !== \"object\") {\n        throw new Error(\"Invalid schema\");\n    }\n\n    if (!Iterable.isIterable(param1) || !Iterable.isIterable(param2)) {\n        throw new Error(\"Only immutable iterables can be merged using merge schema\");\n    }\n\n    if (Set.isSet(param1) || Set.isSet(param2) || Stack.isStack(param1) || Stack.isStack(param2)) {\n        throw new Error(\"Sets and Stacks can't be merged with schema\");\n    }\n\n    // const immutableType = param1.constructor.name;\n    let merged: any;\n\n    if (List.isList(param1)) {\n        merged = List([]);\n    } else if (Map.isMap(param1)) {\n        merged = Map({});\n    } else if (OrderedMap.isOrderedMap(param1)) {\n        merged = OrderedMap({});\n    } else {\n        throw new Error(\"Unsupported type\");\n    }\n\n    // switch (immutableType) {\n    //     case \"List\": merged = List([]); break;\n    //     case \"Map\": merged = Map({}); break;\n    //     case \"OrderedMap\": merged = OrderedMap({}); break;\n    //     default:\n    //         throw new Error(\"Unsupported type\");\n    // }\n\n    param1.forEach((value: any, key: string) => {\n        if (param2.has(key)) {\n            const subSchema = schema ? (schema[key] || schema[\"*\"]) : undefined;\n            merged = merged.set(key, mergeDeep(param1.get(key), param2.get(key), subSchema));\n        } else {\n            merged = merged.set(key, param1.get(key));\n        }\n    });\n\n    param2.forEach((value: any, key: string) => {\n        if (!param1.has(key)) {\n            merged = merged.set(key, param2.get(key));\n        }\n    });\n\n    return merged;\n}\n\nexport default mergeDeep;\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/merge.tsx","export const isProd = () => {\n    const { NODE_ENV } = process.env;\n\n    return typeof NODE_ENV !== \"undefined\" &&\n        NODE_ENV === `\"production\"`;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.tsx","import { SchemaForm } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaForm.propTypes = Object.assign({}, DefaultPropsTypeCheck) as any;\n\nexport { SchemaForm };\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}\n// module id = 10\n// module chunks = 0","import { Reducer } from \"redux-act\";\nimport { Store } from \"redux\";\n\nexport interface FxReducer {\n    actions: any;\n    reducer: Reducer<any>;\n    init(store: Store<any>): void;\n}\n\nexport const d = \"data\";\nexport const m = \"meta\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/reducer.tsx","\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap {\n    public children: TreeMap[] = [];\n\n    /**\n     * 构造函数\n     * @param key    当前节点的key，用于计算位置\n     * @param value  当前节点的值\n     * @param parent 当前节点的父亲节点\n     */\n    constructor(private key: string, public value: any, private parent?: TreeMap) { }\n\n    /**\n     * 添加一个孩子元素\n     * 这里需要构建一颗完整的树，所以要遍历keys来动态创建节点\n     * time complexity = O(1) / Constant\n     * @param keys  节点的路径 example [\"root\",\"b\"]  root -> b\n     * @param value 孩子的数据\n     * @returns TreeMap\n     */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap | null {\n        let curNode: TreeMap = this;\n        let child: TreeMap | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        keys = [...keys];\n\n        // 创建所有路径的节点\n        while (keys.length) {\n            let key: Tsn = keys.shift() as (Tsn);\n            let isNumber = key.constructor === Number;\n\n            child = curNode.contains(key);\n\n            // 这里需要做一下特殊处理\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber) {\n                    child = new TreeMap(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        if (child) {\n            child.value = value;\n        }\n\n        return child;\n    }\n\n    /**\n     * 获取当前的key\n     * 如果key是`-`,代表是数组，则转换成数组下标\n     * time complexity = O(1) / Constant\n     * @returns string\n     */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n     * 获取当前节点的keys路径\n     * time complexity = O(1) / Constant\n     * @returns string[]\n     */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n     * 获取当前节点在父亲children中的下标索引\n     * time complexity = O(1) / Constant\n     * @returns number\n     */\n    public getIndexInParent(): number {\n\n        if (this.parent) {\n            let children = this.parent.children;\n\n            for (let i = 0, n = children.length; i < n; i++) {\n                let child = children[i];\n\n                if (child && child === this) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * 从当前节点查找是否存在节点\n     * time complexity = O(n) / Linear\n     * @param key 节点的数据\n     * @returns TreeMap\n     */\n    public contains(key: Tsn): TreeMap | null {\n        let isNumber = key.constructor === Number;\n\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber) {\n            if (this.children.length > key) {\n                let child = this.children[key as number];\n\n                if (!child) {\n                    this.children[key as number] = new TreeMap(\"-\", null, this);\n\n                    child = this.children[key as number];\n                }\n\n                return child;\n            }\n\n            return null;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            let child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 根据给定的路径数组，返回对应的节点\n     * time complexity = O(n) / Linear\n     * @param keys 路径\n     * @returns TreeMap | null\n     */\n    public containPath(keys: Array<Tsn>): TreeMap | null {\n        let node: TreeMap | null = this;\n\n        keys.forEach((key: Tsn) => {\n            if (!node) {\n                return null;\n            }\n            node = node.contains(key);\n\n            if (!node) {\n                return null;\n            }\n\n            return null;\n        });\n\n        return node;\n    }\n\n    /**\n     * 从父亲节点中删除当前节点\n     * time complexity = O(n) / Linear\n     */\n    public removeFromParent(): void {\n        let index = this.getIndexInParent();\n\n        if (this.parent) {\n            this.parent.children.splice(index, 1);\n        }\n    }\n\n    /**\n     * 移动到某个位置\n     * time complexity = O(1) / Linear\n     * @param toIndex 需要移动到的位置\n     */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n        let offset = (toIndex > curIndex && false) ? 1 : 0;\n        let splitIndex = toIndex;\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.addChild([toIndex]);\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n        // 将当前节点插入到制定的位置\n        this.parent.children = this.parent.children.concat([]).splice(0, splitIndex - offset).concat([this])\n            .concat(this.parent.children.splice(splitIndex - offset));\n    }\n\n    /**\n     * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n     * @param node 指定的节点\n     */\n    public forEach(clearFunc: (node: TreeMap) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        if (!this.children) {\n            return;\n        }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            if (this.children[i]) {\n                this.children[i].value = clearFunc(this.children[i]);\n                this.children[i].forEach(clearFunc);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/tree.tsx","import { SchemaFormItem } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaFormItem.propTypes = Object.assign({}, DefaultPropsTypeCheck) as any;\n\nexport { SchemaFormItem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/index.tsx","// import { UiSchema } from \"fx-schema-form-core/dist/typings/models/uischema\";\nimport { Ajv } from \"ajv\";\nimport Immutable from \"immutable\";\nimport propTypes, { ValidationMap } from \"prop-types\";\n\nimport { FxUiSchema } from \"../models\";\n/**\n * 默认的组件参数\n */\nexport interface DefaultProps {\n    /**\n     * schema对应的$id\n     */\n    schemaId: string;\n    /**\n     * uiSchema\n     */\n    uiSchema?: FxUiSchema;\n    /**\n     * 父亲的路径\n     */\n    parentKeys: string[];\n    /**\n     * 全局默认配置\n     */\n    globalOptions: Immutable.Map<string, any>;\n    /**\n     * ajv的实例\n     */\n    ajv: Ajv;\n    /**\n     * 如果是数组，则表示当前数组的下标\n     */\n    arrayIndex?: number;\n    /**\n     * 当前formItem的层级\n     */\n    arrayLevel?: number[];\n    /**\n     * 数据\n     */\n    formItemData?: any;\n    /**\n     * meta数据\n     */\n    formItemMeta?: any;\n    /**\n     * 数组元素子项的操作\n     */\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n    /**\n     * 当前的reducerkey\n     */\n    reducerKey?: string;\n}\n\nexport const DefaultPropsTypeCheck: ValidationMap<DefaultProps & { customProp: Function }> = {\n    schemaId: propTypes.string.isRequired,\n    uiSchema: propTypes.object,\n    parentKeys: propTypes.array.isRequired,\n    globalOptions: propTypes.object.isRequired,\n    ajv: propTypes.object.isRequired,\n    arrayIndex: propTypes.number,\n    arrayLevel: propTypes.array,\n    formItemData: propTypes.any,\n    formItemMeta: propTypes.any,\n    ArrayItemComponent: propTypes.any\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/default.props.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { reducerFactory, hocFactory, themeFactory } from \"./factory\";\nimport { SchemaForm, DefaultProps, SchemaFormItem } from \"./components\";\nimport { RC,  schemaFormTypes, SchemaFormNs } from \"./models\";\n\nimport fields from \"./fields\";\nimport { TreeMap } from \"./libs/tree\";\nimport {  default as schemaFormDec, name as schemaFormDecName, SchemaFormHocSettings, SchemaFormProps } from \"./libs/dec\";\nimport merge from \"./libs/merge\";\nimport { FxReducer } from \"./reducers/reducer\";\n\n/**\n * 默认样式配置\n * 每个样式包含temp，field和widget三个factory\n */\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    fieldFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    widgetFactory: new BaseFactory<RC<DefaultProps, any>>()\n};\n\n// const a :SchemaFormProps;\n\n/**\n * 添加默认的fields\n */\nfields.forEach((field: any) => {\n    for (const key in field) {\n        if (field.hasOwnProperty(key)) {\n            defaultTheme.fieldFactory.add(key, field[key]);\n        }\n    }\n});\n\nthemeFactory.add(\"default\", defaultTheme as any);\n\nhocFactory.add(schemaFormDecName, schemaFormDec.bind(schemaFormDec, hocFactory));\n\nexport default {\n    themeFactory,\n    defaultTheme,\n    schemaFormDec,\n    TreeMap,\n    reducerFactory,\n    SchemaForm,\n    hocFactory,\n    schemaFormTypes,\n    SchemaFormItem,\n    merge\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { default as merge } from \"./merge\";\nimport { default as utils } from \"./utils\";\nimport { default as theme } from \"./theme\";\nimport { default as field } from \"./field\";\nimport { default as array } from \"./array\";\nimport { default as validate } from \"./validate\";\nimport { default as make } from \"./make\";\nimport { default as temp } from \"./temp\";\nimport { default as data } from \"./data\";\nimport { default as resetkey } from \"./resetkey\";\n\nexport const hocs: Array<{ name: string, hoc: (hocFactory: BaseFactory<any>) => any }> =\n    [merge, utils, theme, field, array, validate, make, temp, data, resetkey];\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/index.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, UiSchema } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    mergeSchemaList?: FxUiSchema[];\n}\n\nexport interface MergeHocProps extends DefaultProps {\n    uiSchemas: Array<string | UiSchema>;\n}\n\nexport const name = \"merge\";\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n * mergeSchemaList    合并之后的数据\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: RC<any, any>): RC<MergeHocProps, any> => {\n            class MergeComponentHoc extends PureComponent<MergeHocProps, any> {\n                private _mergeUiSchemaList: FxUiSchema[];\n\n                /**\n                 * 合并schema和uiSchema生成 mergeUiSchemaList\n                 * @param props props\n                 */\n                constructor(props: MergeHocProps) {\n                    super(props);\n\n                    const uiSchema = props.uiSchema ? Object.assign({}, props.uiSchema) : undefined;\n\n\n                    if (uiSchema) {\n                        uiSchema.keys = uiSchema.originKeys;\n                    }\n\n                    // 这里做数据合并处理\n                    // 将合并之后的数据传递到下一层的Component\n                    const merge = new MergeLib(props.ajv, props.schemaId, uiSchema as any, props.uiSchemas as any);\n\n                    this._mergeUiSchemaList = merge.mergeUiSchemaList.map((v: any) => {\n                        return this.mergeKeys(v);\n                    });\n                }\n\n                /**\n                 * 解析keys\n                 * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n                 * @param mergeSchema 合并过后的FxUiSchema\n                 */\n                private mergeKeys(mergeSchema: any) {\n                    const { arrayLevel = [] } = this.props;\n                    const arrayLevelCopy = arrayLevel.concat([]);\n\n                    mergeSchema = Object.assign({}, mergeSchema);\n                    mergeSchema.originKeys = [].concat(mergeSchema.keys);\n                    mergeSchema.keys = mergeSchema.keys.reverse().map((key: string) => {\n                        if (key === \"-\") {\n                            return arrayLevelCopy.pop();\n                        }\n\n                        return key;\n                    });\n                    mergeSchema.keys.reverse();\n\n                    return mergeSchema;\n                }\n\n                public render(): JSX.Element {\n                    const { uiSchemas, uiSchema, ...extraProps } = this.props;\n\n                    return (\n                        <Component\n                            mergeSchemaList={this._mergeUiSchemaList}\n                            {...extraProps}\n                        />\n                    );\n                }\n            }\n\n            return MergeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/merge.tsx","\n\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, schemaKeysFactory, schemaFieldFactory, getSchemaId } from \"fx-schema-form-core\";\nimport Immutable, { fromJS } from \"immutable\";\nimport resolvePathname from \"resolve-pathname\";\nimport { JSONSchema6 } from \"json-schema\";\nimport { Ajv } from \"ajv\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport merge from \"../libs/merge\";\nimport { reducerFactory } from \"../factory\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\n\nexport const name = \"utils\";\n\nexport interface UtilsHocOutProps {\n    getOptions: (props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n        => { [key: string]: any };\n    getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): () => string;\n    getPathKeys: (keys: string[], path: string, schemaId?: string) => Array<string | number>;\n    normalizeDataPath: (schemaId: string, dataPath: string) => Array<string | number>;\n    getRequiredKeys: (props: DefaultProps, include: string[], exclude: string[]) => { [key: string]: any };\n    getDefaultData: (ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, merge?: boolean) => Promise<any>;\n    getActions: (props: DefaultProps, raw?: boolean) => SchemaFormActions;\n    getPathProps: (props: DefaultProps, path: string) => DefaultProps;\n}\n\n\n/**\n * dataPath中的key格式化；\n * dataPath是一个字符串，需要把里面的数字转化一下\n * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符\n * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n * @param schemaId schemaId\n * @param dataPath 当前的数据路径字符串\n */\nconst normalizeDataPath = (schemaId: string, dataPath: string): Array<string | number> => {\n    let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n    dataKeys = dataKeys.map((key: string | number, index: number) => {\n        if (Number.isInteger(+key)) {\n            let keys: Array<string | number> = dataKeys.slice(0, index);\n\n            keys.unshift(schemaId);\n\n            if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                if (schema.type === \"array\") {\n                    return +key;\n                }\n            }\n        }\n\n        return key;\n    });\n\n    return dataKeys;\n};\n\n/**\n * 包装utils的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            class ComponentHoc extends PureComponent<UtilsHocOutProps, any> {\n                public render(): JSX.Element {\n                    return <Component\n                        getTitle={this.getTitle}\n                        getPathKeys={this.getPathKeys}\n                        getOptions={this.getOptions}\n                        normalizeDataPath={normalizeDataPath}\n                        getRequiredKeys={this.getRequiredKeys}\n                        getDefaultData={this.getDefaultData}\n                        getActions={this.getActions}\n                        getPathProps={this.getPathProps}\n                        {...this.props} />;\n                }\n\n                /**\n                 * 将当前的props更改成任意路径的props\n                 * @param props 当前组件的props\n                 * @param path  需要转换的路径\n                 */\n                private getPathProps(props: DefaultProps & UtilsHocOutProps, path: string): DefaultProps {\n                    let newProps = Object.assign({}, props, {\n                        uiSchema: Object.assign({}, props.uiSchema, {\n                            keys: props.getPathKeys((props.uiSchema as any).keys as any, path)\n                        })\n                    });\n\n                    return newProps;\n                }\n\n                /**\n                 * 获取当前的reducer中的actions\n                 * @param propsCur 当前的属性\n                 * @param raw      是否为raw\n                 */\n                private getActions(propsCur: DefaultProps, raw = false) {\n                    let actions = reducerFactory.get(propsCur.reducerKey || \"schemaForm\").actions;\n\n                    if (raw) {\n                        for (const key in actions) {\n                            if (actions.hasOwnProperty(key)) {\n                                const element = actions[key];\n\n                                actions[key] = element.raw;\n                            }\n                        }\n                    }\n\n                    return actions;\n                }\n\n                /**\n                 * 过滤props中的属性，只传递所需的属性\n                 * 从设置中，获取一部分的设置\n                 * @param props        当前component的props\n                 * @param includeKeys  需要保留的keys\n                 * @param excludeKeys  需要去掉的keys\n                 */\n                private getRequiredKeys(props: { [key: string]: any }, includeKeys: string[] = [], excludeKeys: string[] = [])\n                    : { [key: string]: any } {\n                    let extraProps: { [key: string]: any } = {};\n\n                    if (includeKeys && includeKeys.constructor === Array && includeKeys.length) {\n                        includeKeys.forEach((key: string) => {\n                            if (props.hasOwnProperty(key)) {\n                                extraProps[key] = props[key];\n                            }\n                        });\n                    } else {\n                        extraProps = Object.assign({}, props);\n                    }\n\n                    if (excludeKeys && excludeKeys.constructor === Array && excludeKeys.length) {\n                        excludeKeys.forEach((key: string) => {\n                            if (extraProps.hasOwnProperty(key)) {\n                                delete extraProps[key];\n                            }\n                        });\n                    }\n\n                    return extraProps;\n                }\n\n                /**\n                 * 获取参数\n                 * @param props         当前component的props\n                 * @param category      需要获取的种类，有template，field，hoc等\n                 * @param field         field的名称\n                 * @param extraSettings 其余的设置项\n                 */\n                private getOptions({ uiSchema = {}, globalOptions }: DefaultProps,\n                    category: string,\n                    field: string,\n                    ...extraSettings: Immutable.Map<string, any>[]): { [key: string]: any } {\n\n                    let { options, type = \"\" } = uiSchema as FxUiSchema,\n                        optionsArray: Immutable.Map<string, any>[] = [],\n                        getOptions = (o: any, ks: string[]) => {\n                            if (o) {\n                                if (!Immutable.Map.isMap(o)) {\n                                    o = Immutable.fromJS(o);\n                                }\n                                if (o.hasIn(ks)) {\n                                    optionsArray.push(o.getIn(ks));\n                                }\n                            }\n                        };\n\n                    // 从globalOptions中抽取default的配置\n                    // 从globalOptions中抽取field的配置\n                    // 从options中抽取field的配置\n                    getOptions(globalOptions, [category, \"default\"]);\n                    getOptions(globalOptions, [category, field]);\n                    getOptions(globalOptions, [schemaFormTypes.field, type.toString(), \"options\", category, field]);\n                    getOptions(options, [category, field]);\n\n                    optionsArray = optionsArray.concat(extraSettings);\n\n                    let opts = optionsArray.reverse().reduce((prev: any, next: Immutable.Map<string, any>) => {\n                        if (next) {\n                            if (!Immutable.Map.isMap(next)) {\n                                next = fromJS(next);\n                            }\n\n                            return merge(next, prev, { \"*\": \"replace\" });\n                        }\n\n                        return prev;\n                    }, fromJS({}));\n\n                    return opts.toJS();\n                }\n                /**\n                 * 获取标题数据\n                 * title || key || index\n                 * @param props         当前的props\n                 * @param extraSettings 额外的配置参数\n                 */\n                private getTitle({ uiSchema, arrayIndex }: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): string {\n                    let { title, keys } = uiSchema as FxUiSchema;\n\n                    if (!title && extraSettings && extraSettings.length) {\n                        extraSettings.forEach((sets: Immutable.Map<string, any>) => {\n                            if (sets && !title && sets.get(\"title\")) {\n                                title = sets.get(\"title\");\n                            }\n                        });\n                    }\n\n                    if (title !== undefined) {\n                        return title;\n                    }\n\n                    if (keys && keys.length) {\n                        let keysCopy = [...keys], keyTitle = keysCopy.pop();\n\n                        return keyTitle !== undefined ? keyTitle.toString() : \"\";\n                    }\n\n                    if (arrayIndex) {\n                        return arrayIndex.toString();\n                    }\n\n                    return \"\";\n                }\n\n                /**\n                 * 根据相对路径，得到keys\n                 * @param keys 当前的keys\n                 * @param path 路径\n                 */\n                private getPathKeys(keys: Array<string>, path: string, schemaId?: string): Array<string> {\n                    let keysCopy = [\"\"].concat(keys.concat([\"\"]));\n                    let keysResolve: any[] = resolvePathname(path, keysCopy.join(\"/\")).split(\"/\");\n\n                    keysResolve.shift();\n\n                    if (keysResolve.length && !keysResolve[keysResolve.length - 1]) {\n                        keysResolve.pop();\n                    }\n\n                    // 这里处理一下这个字符串数字的问题把数组中的 \"1\" 转换成 1\n                    if (schemaId) {\n                        keysResolve = normalizeDataPath(getSchemaId(schemaId), keysResolve.join(\"/\"));\n                    }\n\n                    return keysResolve;\n                }\n\n                /**\n                 * 获取当前schema的默认的数据\n                 *  通过ajv的validate方法获取默认的数据\n                 *  与data和defaultData做合并处理\n                 * @param ajv          ajv实例\n                 * @param schema       json-schema\n                 * @param data         额外的数据\n                 * @param defaultData  额外的数据\n                 * @param needMerge    是否需要合并数据\n                 */\n                private async getDefaultData(ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, needMerge = false): Promise<any> {\n                    let defaultValue: any = {},\n                        type = schema.type,\n                        mergeData = (dataOfType: any) => {\n                            if (!needMerge) {\n                                return defaultValue.defaultData;\n                            }\n\n                            let mData: any = merge(fromJS(defaultValue.defaultData), fromJS(dataOfType));\n\n                            if (defaultData) {\n                                return merge(mData, fromJS(defaultData));\n                            }\n\n                            return mData.toJS();\n                        };\n\n                    try {\n                        // 调用ajv的validate方法，这里会处理defaultValue的值\n                        await ajv.validate({\n                            type: \"object\",\n                            properties: {\n                                defaultData: schema\n                            }\n                        }, defaultValue);\n                    } catch (e) {\n                        return data;\n                    } finally {\n                        switch (type) {\n                            case \"object\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || {};\n                                }\n                                defaultValue.defaultData = mergeData(data || {});\n                                break;\n                            case \"array\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || [];\n                                }\n                                defaultValue.defaultData = mergeData(data || []);\n                                break;\n                            default:\n                                defaultValue.defaultData = data || defaultValue.defaultData;\n                        }\n                    }\n\n                    return defaultValue.defaultData;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/utils.tsx","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 21\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}\n// module id = 22\n// module chunks = 0","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, NsFactory } from \"../models\";\nimport { themeFactory } from \"../factory\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\nexport const name = \"theme\";\n\n/**\n * 包装theme的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            const defualtKey = \"default\";\n            class ThemeComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    const { theme } = this.props.uiSchema as FxUiSchema;\n                    let nsFactory;\n\n                    if (themeFactory.has(theme || defualtKey)) {\n                        nsFactory = themeFactory.get(theme || defualtKey);\n                    } else {\n                        throw new Error(`没有找到${theme || defualtKey}的样式！`);\n                    }\n\n                    return <Component currentTheme={nsFactory} {...this.props} />;\n                }\n            }\n\n            return ThemeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/theme.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC } from \"../models\";\nimport { isProd } from \"../utils\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\nexport const name = \"field\";\n/**\n * 包装Field的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> => {\n            const defaultKey = \"default\";\n            class FieldComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> {\n                public render(): JSX.Element | null {\n                    const { currentTheme, getOptions, uiSchema } = this.props,\n                        { field, widget, type } = uiSchema as any;\n                    let FieldComponent, WidgetComponent,\n                        calcField = field || type as string,\n                        calcWidget = widget || type as string;\n\n                    // 查找field\n                    if (currentTheme.fieldFactory.has(calcField)) {\n                        FieldComponent = currentTheme.fieldFactory.get(calcField);\n                    } else {\n                        if (currentTheme.fieldFactory.has(defaultKey)) {\n                            FieldComponent = currentTheme.fieldFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.error(`找不到field：${calcField}`); }\n                            return null;\n                        }\n                    }\n\n                    // 查找widget\n                    if (currentTheme.widgetFactory.has(calcWidget)) {\n                        WidgetComponent = currentTheme.widgetFactory.get(calcWidget);\n                    } else {\n                        if (currentTheme.widgetFactory.has(defaultKey)) {\n                            WidgetComponent = currentTheme.widgetFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.warn(`找不到widget：${calcWidget}`, uiSchema); }\n                        }\n                    }\n\n                    return <Component {...this.props}\n                        FieldComponent={(FieldComponent)}\n                        WidgetComponent={WidgetComponent} />;\n                }\n            }\n\n            return FieldComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/field.tsx","\nimport React, { PureComponent } from \"react\";\nimport { branch, compose, withHandlers, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\nimport { ASN } from \"../reducers/schema.form\";\n\nexport interface ArrayHocOutProps {\n    addItem: (props: DefaultProps, data?: any) => Promise<void>;\n    removeItem: (parentKeys: any[], keys: any[], index: number) => void;\n    moveItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    initArrayComponent: (props: DefaultProps, index?: number) => JSX.Element;\n    ArrayComponent?: new () => React.PureComponent<DefaultProps>;\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport interface ArrayProps extends DefaultProps, UtilsHocOutProps { }\n\nexport const name = \"array\";\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        const commHoc = compose(\n            withHandlers<ArrayProps, any>({\n                /**\n                 * 更新一个数据\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                addItem: (propsCur: ArrayProps) => {\n                    return async (props: ArrayProps, data?: any) => {\n                        if (!props.uiSchema || !props.uiSchema.items) {\n                            return;\n                        }\n                        const { items, keys, defaultData } = props.uiSchema;\n                        const dData = await props.getDefaultData(props.ajv, items as any, data, defaultData, true);\n\n                        propsCur.getActions(propsCur).addItem({\n                            parentKeys: props.parentKeys,\n                            keys: keys as string[],\n                            data: dData\n                        });\n                    };\n                },\n                /**\n                 * 删除一个数组元素\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                removeItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], index: number) => {\n                        propsCur.getActions(propsCur).removeItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            index: index\n                        });\n                    };\n                },\n                /**\n                 * 移动到某个元素后面\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                moveItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => {\n                        propsCur.getActions(propsCur).moveToItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            curIndex: curIndex,\n                            toIndex: toIndex\n                        });\n                    };\n                },\n                /**\n                 * 初始化array的操作组件\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                initArrayComponent: (propsCur: DefaultProps) => {\n                    return (props: DefaultProps & ArrayHocOutProps, index?: number) => {\n                        const { ArrayComponent, ArrayItemComponent, ...extraProps } = props, uiSchema = props.uiSchema as FxUiSchema;\n\n                        if (uiSchema.type === \"array\") {\n                            return ArrayComponent ? <ArrayComponent {...extraProps} /> : null;\n                        }\n\n                        return ArrayItemComponent ? <ArrayItemComponent {...extraProps} /> : null;\n                    };\n                }\n            })) as any;\n\n        /**\n         * 包装array的组件HOC\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        const arrayHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayComponentHoc extends PureComponent<ArrayProps, any> {\n                private ArrayComponent: new () => React.PureComponent;\n                private ArrayItemComponent: new () => React.PureComponent;\n\n                constructor(props: ArrayProps, context: any) {\n                    super(props, context);\n                    this.initArrayComponents();\n                }\n\n                private initArrayComponents() {\n                    const { getOptions } = this.props;\n                    const hocOptions: any = getOptions(this.props, \"hoc\", name);\n\n                    // 设置当前的arrayComponent和ArrayItemComponent\n                    if (hocOptions.ArrayComponent) {\n                        this.ArrayComponent = hocOptions.ArrayComponent;\n                    }\n\n                    if (hocOptions.ArrayItemComponent) {\n                        this.ArrayItemComponent = hocOptions.ArrayItemComponent;\n                    }\n\n                }\n\n                public render(): JSX.Element {\n                    let props: any = {};\n\n                    if (this.ArrayComponent) {\n                        props.ArrayComponent = this.ArrayComponent;\n                    }\n\n                    if (this.ArrayItemComponent) {\n                        props.ArrayItemComponent = this.ArrayItemComponent;\n                    }\n\n                    return <Component {...this.props} {...props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n\n        /**\n         * 如果不是数组则返回pureComponent\n         * @param Component  需要包装的组件\n         */\n        const pureHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayPureComponentHoc extends React.PureComponent<ArrayProps, any> {\n                public render() {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayPureComponentHoc as any;\n        };\n\n        /**\n         * A/B test\n         * 如果是数组则使用A，如果不是则使用B\n         */\n        return branch(\n            (props: ArrayProps) => {\n                const { uiSchema = { type: \"\" } } = props;\n\n                return uiSchema.type === \"array\";\n            },\n            arrayHoc,\n            pureHoc\n        );\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { withHandlers, compose } from \"recompose\";\nimport { BaseFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { Action } from \"redux-act\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC } from \"../models\";\n\nexport interface ValidateHocOutProps {\n    updateItemData: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMeta: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemData: (props: DefaultProps, meta?: any) => void;\n    updateItemDataRaw: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMetaRaw: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemDataRaw: (props: DefaultProps, meta?: any) => void;\n    combineActions: (...actions: Action<any>[]) => void;\n    validate: (props: DefaultProps, data: any, meta?: any) => Promise<any>;\n}\nexport const name = \"validate\";\n\n/**\n * 包装validate的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps, any> => {\n            @(compose(\n                hocFactory.get(\"data\")({\n                    root: settings.root\n                }),\n                withHandlers<any, any>({\n                    /**\n                     * 验证单个数据\n                     * 使用当前组件中的uiSchema，以及传递过来的数据做验证\n                     * 这里可能有远程验证\n                     */\n                    validate: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return async (props: DefaultProps & UtilsHocOutProps, data: any, meta: any = {}) => {\n                            const result: any = { dirty: true, isValid: false, isLoading: false };\n                            const { uiSchema, parentKeys, ajv, getTitle } = props;\n                            const schema = Object.assign({}, uiSchema);\n                            const timeId = setTimeout(() => {\n                                propsCur.getActions(propsCur).updateItemMeta({\n                                    parentKeys: parentKeys,\n                                    keys: (schema as any).keys,\n                                    meta: { isLoading: true, isValid: false, errorText: false }\n                                });\n                            }, 200);\n\n                            // 这里做一层try catch处理\n                            try {\n                                let validateFunc;\n\n                                // 使用schema.schemaPath来确定schema\n                                if (schema.schemaPath && ajv.getSchema(schema.schemaPath)) {\n                                    validateFunc = ajv.getSchema(schema.schemaPath);\n                                } else if (schema.$id) {\n                                    validateFunc = ajv.getSchema(schema.$id);\n                                } else {\n                                    let schemaInCache = Object.assign({}, schemaFieldFactory.get(schema.schemaPath || \"\"));\n\n                                    delete schemaInCache.$id;\n                                    delete schemaInCache.$ref;\n\n                                    validateFunc = ajv.compile(schemaInCache);\n                                }\n\n                                if (propsCur.formItemData) {\n                                    result.isValid = await validateFunc(data, undefined, undefined,\n                                        undefined, propsCur.formItemData.toJS());\n                                } else {\n                                    result.isValid = await validateFunc(data);\n                                }\n\n                                // 如果验证出错，则抛出错误\n                                if (!result.isValid) {\n                                    let error: any = new Error();\n\n                                    error.errors = validateFunc.errors;\n\n                                    throw error;\n                                }\n                            } catch (err) {\n                                // 处理错误消息\n                                result.errorText =  err.errors ?\n                                    ajv.errorsText(err.errors, {\n                                        dataVar: getTitle(props).toString()\n                                    }) : err.message;\n                            }\n                            finally {\n                                clearTimeout(timeId);\n                            }\n\n                            return Object.assign({}, meta, result);\n                        };\n                    }\n\n                }),\n                hocFactory.get(\"resetKey\")({\n                    excludeKeys: [\"formItemData\"]\n                }),\n                withHandlers<any, any>({\n                    /**\n                     * 更新一个数据\n                     */\n                    updateItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, data: any, meta?: any) => {\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).updateItemData({\n                                parentKeys,\n                                keys,\n                                data,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 更新一个元数据\n                     */\n                    updateItemMeta: (propsCur: DefaultProps & UtilsHocOutProps & ValidateHocOutProps) => {\n                        return async (raw: boolean, props: DefaultProps, data: any, meta: any = null, noChange = false) => {\n                            const { parentKeys, uiSchema } = props;\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).updateItemMeta({\n                                parentKeys,\n                                keys,\n                                meta: meta || await propsCur.validate(props, data),\n                                noChange\n                            });\n                        };\n                    },\n                    /**\n                     * 删除一个元素的meta和data\n                     */\n                    removeItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, meta = true) => {\n                            const { keys = [] } = uiSchema || {};\n\n                            return propsCur.getActions(propsCur, raw).removeItemData({\n                                parentKeys,\n                                keys,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 合并多个action\n                     */\n                    combineActions: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (...actions: Action<any>[]) => {\n                            return propsCur.getActions(propsCur).combineActions(actions);\n                        };\n                    },\n                }),\n                withHandlers<any, any>({\n                    updateItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, false);\n                    },\n                    updateItemMeta: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, false);\n                    },\n                    removeItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, false);\n                    },\n                    updateItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, true);\n                    },\n                    updateItemMetaRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, true);\n                    },\n                    removeItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, true);\n                    }\n                })) as any)\n            class ArrayComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/validate.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport Immutable from \"immutable\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\n\nexport interface MakeHocOutProps extends UtilsHocOutProps {\n\n}\n\nexport const name = \"make\";\n\n/**\n * make的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n *  1. HOC默认顺序：ThemeHoc -> FieldHoc -> ValidateHoc -> ArrayHoc -> TempHoc\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps & MakeHocOutProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class MakeComponentHoc extends PureComponent<DefaultProps & MakeHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions } = this.props;\n                    const { type, field, hocs: uiSchemaHocs } = uiSchema as FxUiSchema;\n                    const fieldOptions = getOptions(this.props, schemaFormTypes.field, field || type as string,\n                        Immutable.fromJS(uiSchemaHocs ? { hocs: uiSchemaHocs } : {}),\n                        Immutable.fromJS(settings || {}));\n                    const hocs: Array<string | ComponentEnhancer<any, any>> = fieldOptions.hocs\n                        || [\"utils\", \"theme\", \"field\", \"validate\", \"array\", \"temp\"];\n                    const ComponentWithHocs: any = compose<DefaultProps & MakeHocOutProps, any>\n                        (...([...hocs].map(hoc1 => {\n                            if (typeof hoc1 !== \"string\") {\n                                return hoc1;\n                            }\n                            return hocFactory.get(hoc1)();\n                        })))(Component);\n\n                    return <ComponentWithHocs {...this.props} />;\n                }\n            }\n\n            return MakeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/make.tsx","import React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { ArrayHocOutProps } from \"./array\";\n\nexport const name = \"temp\";\n\n/**\n * 包装Template的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {\n        tempField: \"temps\",\n        templates: []\n    }) => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps, any> => {\n            /**\n            * 获取模板的components\n            * @param uiSchema 合并后的数据\n            */\n            class TempComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps & ArrayHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions, reducerKey } = this.props;\n                    // const { options: uiSchemaOptions, keys } = uiSchema as FxUiSchema;\n                    const TempComponents = this.getTemplates();\n\n                    return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                        const tempOptions = getOptions(this.props, schemaFormTypes.template, key),\n                            TempWithHoc: any = compose(hocFactory.get(\"utils\")(), ...(tempOptions.tempHocs || []))(Temp);\n\n                        return <TempWithHoc\n                            tempKey={key}\n                            ajv={this.props.ajv}\n                            uiSchema={this.props.uiSchema}\n                            schemaId={this.props.schemaId}\n                            arrayLevel={this.props.arrayLevel}\n                            reducerKey={reducerKey}\n                            arrayIndex={this.props.arrayIndex}\n                            globalOptions={this.props.globalOptions}\n                            ArrayComponent={this.props.ArrayComponent}\n                            ArrayItemComponent={this.props.ArrayItemComponent}\n                            initArrayComponent={this.props.initArrayComponent}\n                            parentKeys={this.props.parentKeys}\n                            children={prev} />;\n                    }, <Component {...this.props} />);\n                }\n\n                /**\n                * 获取模板的components\n                */\n                private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n                    const { uiSchema, currentTheme, getOptions } = this.props,\n                        { type, temps } = uiSchema as FxUiSchema,\n                        typeDefaultOptions = getOptions(this.props, schemaFormTypes.field, type as string),\n                        TempComponent: Array<{ key: string, Temp: RC<any, any> }> = [];\n                    let template: Array<any>;\n\n                    if (temps) {\n                        template = temps;\n                    } else if (settings.templates && settings.templates.length > 0) {\n                        template = settings.templates;\n                    } else {\n                        template = typeDefaultOptions[settings.tempField] || \"default\";\n                    }\n\n                    const getTemplate = (tmp: any): void => {\n                        switch (tmp.constructor) {\n                            case String:\n                                if (!currentTheme.tempFactory.has(tmp)) {\n                                    console.error(`不存在${tmp}的temp！`);\n                                } else {\n                                    TempComponent.push({\n                                        key: tmp,\n                                        Temp: currentTheme.tempFactory.get(tmp)\n                                    });\n                                }\n                                break;\n                            case Object:\n                                TempComponent.push({\n                                    key: tmp.name,\n                                    Temp: tmp\n                                });\n                                break;\n                            case Array:\n                                [...template].reverse().forEach((tml, idx) => {\n                                    getTemplate(tml);\n                                });\n                                break;\n                        }\n                    };\n\n                    getTemplate(template);\n\n                    return TempComponent;\n                }\n            }\n\n            return TempComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/temp.tsx","\nimport React, { PureComponent } from \"react\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { createSelectorCreator, defaultMemoize } from \"reselect\";\nimport Immutable, { is } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { RC, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { TreeMap } from \"../libs/tree\";\n\nexport interface DataHocOutProps extends DefaultProps { }\n\n/**\n * HOC的设定参数\n */\nexport interface DataHocSettings {\n    /**\n     * 是否需要root的数据\n     */\n    root?: boolean;\n    /**\n     * 是否需要当前的key的数据\n     */\n    data?: boolean;\n    /**\n     * 是否需要当前key的长度，只能是array格式\n     */\n    dataLength?: boolean;\n    /**\n     * 是否需要当前key对应的meta数据\n     */\n    meta?: boolean;\n    /**\n     * 设置当前key下所需要的meta的key值\n     */\n    metaKeys?: string[];\n    /**\n     * 是否获取meta的根节点\n     */\n    treeNode?: boolean;\n}\n\n// 自定义选择器创建函数\nconst fxSelectorCreator: any = createSelectorCreator(defaultMemoize, is);\n\nexport const name = \"data\";\nexport const hoc = (hocFactory: BaseFactory<RC<DefaultProps, {}>>) => {\n    return (settings: DataHocSettings = {\n        data: true\n    }) => {\n        /**\n         * 与reduce相关的数据操作\n         * 获取formItemData数据\n         * 获取formItemMeta数据\n         */\n        const getItemDataHoc = (parentKeys: string[], rootReducerKey: string[], keys: Array<string | number>) => {\n            /**\n             * 获取FormItemData的数据\n             * @param state 当前的state树\n             */\n            let getFormItemData = (state: Immutable.Map<string, any>) => {\n                let dataKeys: Array<string | number> = [...rootReducerKey, ...parentKeys, \"data\"];\n\n                // 如果配置中root为ture，则取得所有的数据\n                if (settings.root) {\n                    return state.getIn(dataKeys);\n                }\n\n                // 否则根据单个的keys获取\n                dataKeys = [...dataKeys, ...keys];\n                if (settings.data && state.hasIn(dataKeys)) {\n                    let formItemData = state.getIn(dataKeys);\n\n                    if (formItemData !== undefined) {\n                        if (!settings.dataLength) {\n                            return formItemData;\n                        } else {\n                            // 如果是列表，则返回size\n                            if (Immutable.List.isList(formItemData)) {\n                                return formItemData.size;\n                            }\n\n                            return 0;\n                        }\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的数据\n            * @param state 当前的state树\n            */\n            let getFormItemMeta = (state: Immutable.Map<string, any>) => {\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n\n                if (settings.meta && state.hasIn(metaKeys)) {\n                    let rootNode = state.getIn(metaKeys),\n                        childNode = rootNode.containPath([...keys]);\n\n                    if (childNode && childNode.value) {\n                        if (settings.metaKeys) {\n                            return childNode.value.filter((val: any, key: string) => {\n                                if (!settings.metaKeys) {\n                                    return false;\n                                }\n                                return settings.metaKeys.indexOf(key) >= 0;\n                            });\n                        }\n                        return childNode.value;\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的根数据\n            * @param state 当前的state树\n            */\n            let getRoot = (state: Immutable.Map<string, any>) => {\n                if (!settings.treeNode) {\n                    return null;\n                }\n\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n                let rootNode: TreeMap = state.getIn(metaKeys);\n                let childNode = rootNode.containPath([...keys]);\n\n                if (childNode) {\n                    return childNode;\n                }\n\n                return rootNode.addChild([...keys]);\n            };\n\n            /**\n             * re-select来缓存数据\n             */\n            return fxSelectorCreator(\n                [getFormItemData, getFormItemMeta, getRoot],\n                (formItemData: any, formItemMeta: any, formItemNode: TreeMap) => {\n                    const rtn: { formItemData?: any, formItemMeta?: any, formItemNode?: TreeMap } = {};\n\n                    if (formItemData !== undefined && formItemData !== null) {\n                        rtn.formItemData = formItemData;\n                    }\n                    if (formItemMeta !== undefined && formItemMeta !== null) {\n                        rtn.formItemMeta = formItemMeta;\n                    }\n                    if (formItemNode !== undefined && formItemNode !== null) {\n                        rtn.formItemNode = formItemNode;\n                    }\n\n                    return rtn;\n                }\n            );\n        };\n\n        /**\n         * 用于获取数据的hoc\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        return (Component: any): RC<DefaultProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class DataComponentHoc extends PureComponent<DefaultProps & UtilsHocOutProps, any> {\n                private ComponentWithHoc: any = Component;\n\n                constructor(props: DefaultProps & UtilsHocOutProps) {\n                    super(props);\n\n                    const { getOptions } = this.props,\n                        { keys = [] } = this.props.uiSchema || {},\n                        options = getOptions(this.props, schemaFormTypes.hoc, name);\n\n\n                    if (!options.rootReducerKey || options.rootReducerKey.constructor !== Array) {\n                        console.error(\"dataHoc missing property rootReducerKey.should be a Array.\");\n                    } else {\n                        // 获取当前的数据hoc\n                        this.ComponentWithHoc = connect(getItemDataHoc(this.props.parentKeys, options.rootReducerKey, keys))(Component);\n                    }\n                }\n\n                public render(): JSX.Element {\n                    const ComponentWithHoc = this.ComponentWithHoc;\n\n                    return <ComponentWithHoc {...this.props} />;\n                }\n            }\n\n            return DataComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/data.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}\n// module id = 30\n// module chunks = 0","\nimport React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { fromJS } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { schemaFormTypes, RC } from \"../models\";\n\nexport interface Props extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport interface ResetKeysHocOutSettings {\n    excludeKeys: string[];\n    includeKeys: string[];\n}\n\nexport const name = \"resetKey\";\n\n/**\n * resetKey\n * 用来筛选组件中的props\n * 配置：\n *  excludeKeys：需要去掉的属性数组\n *  includeKeys：需要的属性数组\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: ResetKeysHocOutSettings = { excludeKeys: [], includeKeys: [] }) => {\n        return (Component: any): RC<Props, any> => {\n            class ComponentHoc extends React.PureComponent<Props, any> {\n                public render(): JSX.Element {\n                    const { getOptions, getRequiredKeys } = this.props,\n                        normalOptions = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                        extraProps = getRequiredKeys(this.props, normalOptions.includeKeys, normalOptions.excludeKeys);\n\n                    return <Component {...extraProps} />;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/resetkey.tsx","import { fromJS } from \"immutable\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\n\nexport const schemaFormReducer = new SchemaFormReducer(fromJS({}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.tsx","import { createAction, createReducer, SimpleActionCreator, BaseActionCreator, EmptyActionCreator, Action } from \"redux-act\";\nimport { Reducer } from \"redux-act\";\nimport { List, Map, fromJS } from \"immutable\";\nimport { Store } from \"redux\";\n\nimport { FxReducer, d, m } from \"./reducer\";\nimport { TreeMap } from \"../libs/tree\";\nimport merge from \"../libs/merge\";\nimport { isProd } from \"../utils\";\n\nexport type ASN = Array<string | number> | string[];\n\nexport interface SchemaFormActions {\n    [index: string]: SimpleActionCreator<any, any>;\n    removeForm: SimpleActionCreator<ASN>;\n    createForm: SimpleActionCreator<{ key: string, data: any }>;\n    updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>;\n    updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>;\n    addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>;\n    removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>;\n    moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>;\n    removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>;\n    combineActions: SimpleActionCreator<Action<any, any>[]>;\n}\n\n/**\n * 解析一个路径上的数据，判断数据格式，做处理\n * @param state 当前的state\n * @param keys  数据路径\n * @returns newState\n */\nconst resolveKeys = (state: Map<string, any>, keys: Array<string>): Map<string, any> => {\n    if (state.hasIn(keys)) {\n        return state;\n    }\n\n    for (let i = 0, n = keys.length; i < n; i++) {\n        const mKeys = [...keys].splice(0, i + 1);\n\n        // 如果key不存在，遍历生成数据结构\n        if (!state.hasIn(mKeys)) {\n            mKeys.pop();\n            if (!state.hasIn(mKeys)) {\n                if (keys[i].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        } else if (i < n) {\n            // 如果key存在，则判断数据结构是否与结构一致\n            const data = state.getIn(mKeys);\n\n            if (!Map.isMap(data) && !List.isList(data)) {\n                if (keys[i + 1].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        }\n    }\n\n    return state;\n};\n\nexport class SchemaFormReducer<T> implements FxReducer {\n\n    /**\n     * 创建一个表单\n     */\n    private createForm: SimpleActionCreator<{ key: string, data: any }>\n        = createAction<{ key: string, data: any }>(isProd() ? \"\" : \"创建一个表单数据\");\n    /**\n     * 更新一个表单数据\n     */\n    private updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>(isProd() ? \"\" : \"更新一个表单数据\");\n    /**\n     * 更新一个表单元数据\n     */\n    private updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta: any }>(isProd() ? \"\" : \"更新一个表单元数据\");\n    /**\n     * 添加一个元素到数组\n     */\n    private addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any }>(isProd() ? \"\" : \"添加一个数据\");\n    /**\n     * 从数组中删除一个元素\n     */\n    private removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, index: number }>(isProd() ? \"\" : \"删除一个数据\");\n    /**\n     * 移动一个数组元素\n     */\n    private moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>(isProd() ? \"\" : \"元素移位\");\n    /**\n     * 删除一个字段的数据以及元数据\n     */\n    private removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta?: boolean }>(isProd() ? \"\" : \"删除一个字段的数据以及meta数据\");\n    /**\n     * 合并多个action，触发一次dispatch\n     */\n    private combineActions: SimpleActionCreator<Action<any, any>[]>\n        = createAction<Action<any, any>[]>(isProd() ? \"\" : \"合并多个action\");\n\n    private removeForm: SimpleActionCreator<ASN>\n        = createAction<ASN>(isProd() ? \"\" : \"清除一个form的数据\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     */\n    constructor(private initialState: any) { }\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): SchemaFormActions {\n        return {\n            createForm: this.createForm,\n            updateItemData: this.updateItemData,\n            updateItemMeta: this.updateItemMeta,\n            addItem: this.addItem,\n            removeItem: this.removeItem,\n            moveToItem: this.moveToItem,\n            removeItemData: this.removeItemData,\n            combineActions: this.combineActions,\n            removeForm: this.removeForm\n        };\n    }\n\n    /**\n     * 初始化actions\n     * @param store Redux中的store实例\n     */\n    public init(store: Store<Map<string, any>>): void {\n        for (const key in this.actions) {\n            if (this.actions.hasOwnProperty(key)) {\n                const action = this.actions[key];\n\n                if (!action.assigned()) {\n                    action.assignTo(store as any);\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.createForm as any]: this.createFormHandle.bind(this),\n            [this.updateItemData as any]: this.updateItemDataHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateItemMetaHandle.bind(this),\n            [this.addItem as any]: this.addItemDataHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.moveToItem as any]: this.moveItemHandle.bind(this),\n            [this.removeItemData as any]: this.removeItemDataMetaHandle.bind(this),\n            [this.combineActions as any]: this.combineActionsHandle.bind(this),\n            [this.removeForm as any]: this.removeFormHandle.bind(this)\n        }, this.initialState);\n    }\n\n    /**\n     * 清除一个表单数据\n     * @param state   state\n     * @param param1  参数\n     */\n    private removeFormHandle(state: Map<string, any>, parentKeys: ASN) {\n        let dataKeys = parentKeys;\n\n        if (state.hasIn(dataKeys)) {\n            return state.removeIn(dataKeys);\n        }\n\n        return state;\n    }\n\n    /**\n     * 合并多个action\n     * @param state    state\n     * @param actions  需要调用的action\n     */\n    private combineActionsHandle(state: Map<string, any>, actions: Action<any, any>[]) {\n        state = actions.reduce((stateNew: Map<string, any>, act2: Action<any>) => {\n            return this.reducer(stateNew, act2);\n        }, state);\n\n        return state;\n    }\n\n    /**\n     * 删除一个字段的数据以及meta数据\n     * @param state   当前的state\n     * @param param1  参数\n     *  parentKeys  父亲的keys\n     *  keys        当前元素的keys\n     *  meta        是否要删除meta数据\n     */\n    private removeItemDataMetaHandle(state: Map<string, any>, { parentKeys, keys, meta }: any) {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n\n        state = resolveKeys(state, dataKeys);\n\n        if (state.hasIn(dataKeys)) {\n            state = state.removeIn(dataKeys);\n        }\n\n        if (childNode && meta) {\n            childNode.removeFromParent();\n        }\n\n        return state;\n    }\n\n    /**\n     * 创建一份表单数据\n     * @param state   当前的state\n     * @param param1  参数值，key 和 data\n     */\n    private createFormHandle(state: Map<string, any>, { key, data }: any): Map<string, any> {\n        if (state.has(key)) {\n            state = state.remove(key);\n        }\n\n        const meta = new TreeMap(key, fromJS({}));\n        const stateData = Map<string, any>({\n            meta: meta,\n            data: fromJS(data)\n        });\n\n        return state.set(key, stateData);\n    }\n    /**\n     * 修改一个数据\n     * 合并parrentKeys和keys，中间加入一个“data”\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemDataHandle(state: Map<string, any>, { parentKeys, keys, data, meta }: any): Map<string, any> {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n\n        state = resolveKeys(state, dataKeys);\n        state = state.setIn(dataKeys, fromJS(data));\n\n        if (meta) {\n            state = this.updateItemMetaHandle(state, { parentKeys, keys, meta });\n        }\n\n        return state;\n    }\n\n    /**\n     * 添加一个数组到List\n     * 1. 添加数组\n     * 2. 修改meta中的collapsing字段为false，使得折叠的状态改变成不折叠的状态\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private addItemDataHandle(state: Map<string, any>, { parentKeys, keys, data }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys);\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys) || List();\n        formItemData = formItemData.push(fromJS(data));\n\n        if (childNode && childNode.value) {\n            childNode.value = childNode.value.merge({\n                collapsing: false\n            });\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 删除数组中的一个元素\n     * 1. 删除元素数组中的数据\n     * 2. 删除meta信息中的数据\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private removeItemHandle(state: Map<string, any>, { parentKeys, keys, index }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.addChild(keys.concat([index]));\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys);\n\n        if (!formItemData || !List.isList(formItemData)) {\n            return state;\n        }\n\n        if (childNode) {\n            childNode.removeFromParent();\n        }\n\n        return state.setIn(dataKeys, formItemData.remove(index));\n    }\n\n    /**\n     * 交换2个数组的位置\n     * 1. 交换数组数据\n     * 2. 交换meta中的位置信息\n     * @param state   当前的state\n     * @param param1  参数\n     *   parentKeys    父亲的keys\n     *   keys          当前item的keys\n     *   curIndex      当前item的索引\n     *   toIndex       需要交换的item索引\n     */\n    private moveItemHandle(state: Map<string, any>, { parentKeys, keys, curIndex, toIndex }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            offset = (toIndex > curIndex && false ? 1 : 0);\n        let oldFormItemData: List<any> = state.getIn(dataKeys),\n            formItemData: List<any> = state.getIn(dataKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys.concat([curIndex])),\n            childNodeTo: TreeMap | null = rootNode.containPath(keys.concat([toIndex]));\n\n        state = resolveKeys(state, dataKeys);\n\n        if (!formItemData || toIndex < 0) {\n            return state;\n        }\n\n        let curItemData = formItemData.get(curIndex);\n\n        formItemData = formItemData.remove(curIndex);\n        formItemData = formItemData.insert(toIndex - offset, curItemData);\n\n        if (childNode) {\n            childNode.insertToFromParent(toIndex);\n        } else {\n            if (childNodeTo) {\n                childNodeTo.insertToFromParent(curIndex);\n            }\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 修改一个数据的元数据\n     * 通过parentKeys取得根节点\n     * 通过keys合成元素的节点路径，从根节点获取数据\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemMetaHandle(state: Map<string, any>, { parentKeys, keys, meta, noChange }: any): Map<string, any> {\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n        let value = childNode ? childNode.value : null;\n\n        // 如果childNode不存在，则新建一个\n        if (!childNode) {\n            childNode = rootNode.addChild(keys);\n        }\n\n        // 判断childNode，如果存在value，则合并value，否则创建value\n        if (childNode) {\n            if (value) {\n                childNode.value = merge(childNode.value, fromJS(meta), { \"*\": \"replace\" });\n            } else {\n                childNode.value = fromJS(meta);\n            }\n        }\n\n        if (noChange) {\n            return state;\n        }\n\n        // 生成新的TreeMap\n        let newRoot = new TreeMap(rootNode.getKey(), rootNode.value);\n\n        newRoot.children = rootNode.children;\n\n        return state.setIn(metaKeys, newRoot);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/schema.form.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}\n// module id = 34\n// module chunks = 0","import React, { PureComponent } from \"react\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../index\";\nimport { hoc } from \"./container\";\nimport { MergeHocOutProps } from \"../../hocs/merge\";\nimport { SchemaFormItem } from \"../formitem/index\";\nimport { FxUiSchema } from \"../../models/index\";\n\nexport interface Props extends DefaultProps, MergeHocOutProps {\n    RootComponent?: any;\n    uiSchemas?: Array<string | FxUiSchema>;\n}\n\n@(hoc as any)\nexport class SchemaForm extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { schemaId, mergeSchemaList, arrayLevel, RootComponent, children, ...extraProps } = this.props;\n        const formItemList = mergeSchemaList ? mergeSchemaList.map((uiScehma: FxUiSchema, idx: number) => {\n            let arrayLevelCopy = arrayLevel ? arrayLevel.concat([]) : [];\n\n            return <SchemaFormItem\n                key={idx}\n                {...extraProps}\n                schemaId={schemaId}\n                uiSchema={uiScehma}\n                arrayLevel={arrayLevelCopy}\n            />;\n        }) : [];\n\n        if (RootComponent) {\n            return <RootComponent >\n                {formItemList}\n                {children}\n            </RootComponent>;\n        }\n\n        return (\n            <div>\n                {formItemList}\n                {children}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/component.tsx","import { compose, ComponentEnhancer, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    shouldUpdate(() => false),\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"merge\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/container.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"redux\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../default.props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"../../hocs/field\";\nimport { UtilsHocOutProps } from \"../../hocs/utils\";\nimport { isProd } from \"../../utils\";\n\nexport interface Props extends DefaultProps {\n\n}\n\n@(hoc as any)\nexport class SchemaFormItem extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { FieldComponent, uiSchema, ...extraProps } = this.props as Props & FieldHocOutProps & UtilsHocOutProps;\n        const options = extraProps.getOptions(this.props, \"field\", (uiSchema as any).field || (uiSchema as any).type);\n        let FieldComponentWithHoc: any = FieldComponent;\n\n        if (!FieldComponent) {\n            if (!isProd()) { console.warn(uiSchema, \"没有找到匹配的field\"); }\n            return null;\n        }\n\n        if (options.fieldHocs && options.fieldHocs.length) {\n            FieldComponentWithHoc = compose(\n                ...(options.fieldHocs || [])\n            )(FieldComponent);\n        }\n\n        return <FieldComponentWithHoc key={(uiSchema as any).keys.join(\"formItem\")} uiSchema={uiSchema} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/component.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}\n// module id = 39\n// module chunks = 0","import { compose, ComponentEnhancer } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"make\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/container.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}\n// module id = 41\n// module chunks = 0","import { default as normalField, NormalField, name as n1 } from \"./normal\";\nimport { default as objectField, ObjectField, name as n2 } from \"./object\";\nimport { default as arrayField, ArrayField, name as n3 } from \"./array\";\n\nexport default [normalField, objectField, arrayField];\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/index.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { FieldHocOutProps } from \"../hocs/field\";\n\nexport interface NormalFieldProps extends DefaultProps, UtilsHocOutProps, FieldHocOutProps {\n\n}\n\nexport const name = \"normal\";\n\n/**\n * 普通数据字段类型\n * 这里直接渲染[fieldHoc]中结算得出的WidgetComponent\n */\nexport class NormalField extends PureComponent<NormalFieldProps> {\n\n    constructor(props: NormalFieldProps, context: any) {\n        super(props, context);\n    }\n\n    public render(): JSX.Element | null {\n        const { WidgetComponent, FieldComponent, formItemMeta, formItemData, ...extraProps } = this.props,\n            fieldOptions = extraProps.getOptions(this.props, schemaFormTypes.field, name),\n            { keys } = extraProps.uiSchema as FxUiSchema;\n        let WidgetComponentWithHoc = WidgetComponent;\n\n        if (!WidgetComponent || !keys) {\n            return null;\n        }\n\n        if (fieldOptions.widgetHocs && fieldOptions.widgetHocs.length) {\n            WidgetComponentWithHoc = (compose(\n                ...fieldOptions.widgetHocs\n            ) as any)(WidgetComponent);\n        }\n\n        return (\n            <WidgetComponentWithHoc key={keys.join(\".\")} {...extraProps} />\n        );\n    }\n}\n\nexport default {\n    [name]: NormalField,\n    default: NormalField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/normal.tsx","import React, { PureComponent } from \"react\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { DefaultProps } from \"../components\";\nimport { schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { compose } from \"recompose\";\n\nexport interface ObjectFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport const name = \"object\";\n\n/**\n * Object类型的字段解析\n * 嵌套一层SchemaForm\n */\nexport class ObjectField extends PureComponent<ObjectFieldProps, any> {\n    public render(): JSX.Element | null {\n        const { arrayIndex, arrayLevel, parentKeys, globalOptions, ajv, getOptions, reducerKey, uiSchema } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = SchemaForm;\n\n        // 如果children设置成null，则返回空\n        if (!uiSchema || uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // 如果需要对schemaform对hoc包装\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(SchemaForm as any);\n        }\n\n        return (\n            <SchemaFormWithHoc\n                arrayIndex={arrayIndex}\n                arrayLevel={arrayLevel}\n                RootComponent={options.Root}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"*\"]}\n                uiSchema={uiSchema}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n}\n\nexport default {\n    [name]: ObjectField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/object.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\n\nimport { SchemaForm } from \"../components/form\";\n// import { hocFactory } from \"../factory\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface ArrayFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nlet arrayFieldStyle = {\n    width: \"100%\",\n    height: \"100%\"\n};\n\nclass ArrayFieldComponent extends React.PureComponent {\n    public render() {\n        return <div style={arrayFieldStyle}>{this.props.children}</div>;\n    }\n}\n\nexport const name = \"array\";\n\n/**\n * 数组结构的字段解析\n * 这里需要数组元素的个数来做循环\n * 循环生成元素个数的SchemaForm\n */\nexport class ArrayField extends PureComponent<ArrayFieldProps, any> {\n    private SchemaFormWithHoc: any = ArrayFieldComponent;\n    private SchemaFormItemWithHoc: any;\n\n    constructor(props: ArrayFieldProps) {\n        super(props);\n\n        this.initComponent();\n    }\n\n    /**\n     * 初始化Component\n     */\n    private initComponent() {\n        const { getOptions } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc = null, SchemaFormItemWithHoc = null;\n\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(options.ArrayFieldComponent || ArrayFieldComponent);\n        }\n\n        if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n            SchemaFormItemWithHoc = compose(...options.formItemHocs)(SchemaForm as any);\n        }\n\n        this.SchemaFormWithHoc = SchemaFormWithHoc;\n        this.SchemaFormItemWithHoc = SchemaFormItemWithHoc;\n    }\n\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element | null {\n        const { parentKeys, globalOptions, getOptions, arrayLevel = [], getRequiredKeys, ajv, reducerKey, ArrayItemComponent } = this.props,\n            uiSchema = this.props.uiSchema as FxUiSchema,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = this.SchemaFormItemWithHoc || SchemaForm;\n        // const extraProps = getRequiredKeys(this.props, options);\n\n        // 如果不需要children，则跳出\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // // 如果需要对schemaform对hoc包装\n        // if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        // }\n\n        return (\n            <SchemaFormWithHoc\n                key={idx}\n                arrayIndex={idx}\n                uiSchema={uiSchema}\n                RootComponent={options.Root}\n                ArrayItemComponent={ArrayItemComponent}\n                arrayLevel={arrayLevel.concat([idx])}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"-\"]}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { uiSchema, formItemData, getOptions, getRequiredKeys } = this.props, child = [],\n            options = getOptions(this.props, schemaFormTypes.field, name),\n            SchemaFormWithHoc = this.SchemaFormWithHoc,\n            { fieldIncludeKeys, fieldExcludeKeys } = options,\n            extraProps = getRequiredKeys(this.props, fieldIncludeKeys, fieldExcludeKeys);\n\n        for (let i = 0; i < +formItemData; i++) {\n            child.push(this.renderItem(i));\n        }\n\n        // 如果需要对schemaform对hoc包装\n        // if (options.formHocs && options.formHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formHocs)(({ children }) => {\n        //         return <div style={arrayFieldStyle}>{children}</div>;\n        //     });\n\n        //     return <SchemaFormWithHoc {...this.props} children={child} />;\n        // }\n\n        return <SchemaFormWithHoc children={child} {...extraProps} />;\n    }\n}\n\nexport default {\n    [name]: ArrayField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, withHandlers } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { fromJS, Map, List } from \"immutable\";\nimport { ErrorObject, ValidationError } from \"ajv\";\n\nimport { DefaultProps } from \"../components\";\nimport { RC, schemaFormTypes } from \"../models\";\nimport { hocFactory, errorFactory } from \"../factory\";\nimport { TreeMap } from \"./tree\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { d, m } from \"../reducers/reducer\";\n\nexport interface SchemaFormHocSettings {\n    rootReducerKey: string[];\n    parentKeys: string[];\n}\n\nexport interface SchemaFormProps extends SchemaFormHocOutProps {\n    root?: TreeMap;\n    data?: any;\n    errors?: any;\n    isValid?: boolean;\n    isValidating?: boolean;\n\n    formKey?: string;\n    initData?: any;\n    shouldResetForm?: boolean;\n}\n\nexport interface SchemaFormHocOutProps {\n    validateAll?: ($async?: boolean) => Promise<any>;\n    resetForm?: () => Promise<void>;\n}\n\nexport const name = \"schemaFormDec\";\n\n/**\n * 提供全部验证等功能\n * @param Component 需要包装的组件\n */\nexport default (settings: SchemaFormHocSettings = { rootReducerKey: [], parentKeys: [] }) => {\n    return (Component: any): RC<SchemaFormProps & DefaultProps, any> => {\n        @(compose(\n            hocFactory.get(\"utils\")(),\n            // 绑定数据\n            connect((state: Map<string, any>) => {\n                let rootKeys = settings.rootReducerKey.concat(settings.parentKeys),\n                    dataKeys = rootKeys.concat([d]),\n                    metaKeys = rootKeys.concat([m]),\n                    root = state.getIn(metaKeys);\n\n                return {\n                    data: state.getIn(dataKeys),\n                    root: root,\n                    isValid: root ? root.value.get(\"isValid\") : true,\n                    errors: root ? root.value.get(\"errors\") : null,\n                    isValidating: root ? root.value.get(\"isLoading\") : false\n                };\n            }),\n            withHandlers<any, any>({\n                /**\n                 * 验证所有的字段\n                 */\n                validateAll: (props: SchemaFormProps & DefaultProps & UtilsHocOutProps) => {\n                    let { updateItemMeta } = props.getActions(props), timeId: any;\n\n                    /**\n                     * 验证所有字段\n                     * async : boolean 是否是异步的\n                     */\n                    return async (async?: boolean) => {\n                        let root = props.root as TreeMap,\n                            curAjv = props.ajv,\n                            dataRaw = props.data,\n                            validate = props.ajv.getSchema(props.schemaId),\n                            $validateBeforeData = fromJS({\n                                dirty: true,\n                                isValid: true,\n                                isLoading: true\n                            }),\n                            $validateAfterData = fromJS({ isLoading: false, dirty: true }),\n                            normalizeDataPath = props.normalizeDataPath;\n\n                        // 如果没有root，则跳出\n                        if (!root) {\n                            return;\n                        }\n\n                        // 如果没有validate，则报错\n                        if (!validate) {\n                            throw new Error(`没有找到对应的${props.schemaId};`);\n                        }\n\n                        try {\n                            // 将所有的字段的meta数据标准化\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateBeforeData);\n                                }\n\n                                return $validateBeforeData;\n                            }, true);\n                            // 验收更新meta数据\n                            timeId = setTimeout(() => {\n                                updateItemMeta({\n                                    parentKeys: settings.parentKeys,\n                                    keys: [],\n                                    meta: root.value\n                                });\n                            }, 200);\n\n                            if (Map.isMap(dataRaw) || List.isList(dataRaw)) {\n                                dataRaw = dataRaw.toJS();\n                            }\n\n                            // 验证数据\n                            curAjv.errors = undefined;\n                            if (!await validate(dataRaw)) {\n                                if (!validate.errors) {\n                                    validate.errors = [];\n                                }\n                                throw new (ValidationError as any)(validate.errors.concat(curAjv.errors || []));\n                            }\n\n                            // 设置成功的标志位\n                            root.value = root.value.merge({\n                                isValid: true\n                            });\n\n                            // 提交meta数据\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        } catch (e) {\n                            // 错误的逻辑\n                            if (!(e instanceof (ValidationError as any))) {\n                                return {\n                                    isValid: false,\n                                    errMsg: e.message\n                                };\n                            }\n\n                            // 处理错误\n                            e.errors.forEach((element: ErrorObject) => {\n                                let dataKeys = root.getCurrentKeys().concat(normalizeDataPath(props.schemaId, element.dataPath));\n                                let childNode = root.containPath(dataKeys);\n\n                                if (!childNode) {\n                                    childNode = root.addChild(dataKeys, fromJS({}));\n                                }\n\n                                if (childNode) {\n                                    childNode.value = childNode.value.merge($validateAfterData).merge({\n                                        isValid: false,\n                                        errorText: errorFactory.get(\"default\")(element, dataKeys)\n                                    });\n                                }\n                            });\n\n                            root.value = root.value.merge({\n                                isValid: false,\n                                errors: e.errors\n                            });\n                        } finally {\n                            clearTimeout(timeId);\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateAfterData);\n                                }\n\n                                return node.value;\n                            }, true);\n\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        }\n\n                        return {\n                            isValid: root.value.get(\"isValid\"),\n                            data: dataRaw\n                        };\n                    };\n                },\n                resetForm: (props: SchemaFormProps & DefaultProps & UtilsHocOutProps) => {\n                    return async () => {\n                        const { formKey, shouldResetForm, reducerKey, ajv, getDefaultData, initData = {}, schemaId } = props;\n\n                        if (formKey && shouldResetForm !== false) {\n                            let { createForm } = props.getActions(props);\n                            let schema: any = ajv.getSchema(schemaId).schema;\n\n                            if (createForm && schema) {\n                                createForm({\n                                    key: formKey,\n                                    data: await getDefaultData(ajv, schema, initData, {}, true)\n                                });\n                            }\n                        }\n                    };\n                }\n            })) as any)\n        class SchemaFormComponentHoc extends PureComponent<SchemaFormProps & DefaultProps & UtilsHocOutProps, any> {\n            private _validateAll: (async?: boolean) => Promise<void>;\n\n            constructor(props: SchemaFormProps & DefaultProps & UtilsHocOutProps) {\n                super(props);\n\n                // 绑定当前的方法，可以使用autobind\n                if (props.validateAll) {\n                    this._validateAll = props.validateAll.bind(this);\n                }\n\n                // 这里创建一个form，如果当前存在formKey，则覆盖掉当前的数据\n                if (props.resetForm) {\n                    props.resetForm();\n                }\n            }\n\n            public render(): JSX.Element | null {\n                const { getRequiredKeys, getOptions, schemaId } = this.props,\n                    options = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                    extraProps = getRequiredKeys(this.props, options.hocIncludeKeys, options.hocExcludeKeys);\n\n                return (\n                    <Component\n                        validateAll={this._validateAll}\n                        parentKeys={settings.parentKeys}\n                        schemaId={schemaId}\n                        {...extraProps} />\n                );\n            }\n        }\n\n        return SchemaFormComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/dec.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}